using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Mvc;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace ShrineFoxCom
{
    public partial class PatchCreator : Page
    {
        CheckBoxList cbList = new CheckBoxList();
        protected void Page_Load(object sender, EventArgs e)
        {
            // Sidebar
            LiteralControl SidebarHtml = new LiteralControl();
            SidebarHtml.Text = Properties.Resources.IndexSidebar.Replace("<!--Accordions-->", Properties.Resources.Browse + Properties.Resources.Apps.Replace("rpcs3patchlink", "active"));
            Sidebar.Controls.Add(SidebarHtml);

            // DeathChaos (P5 EX)
            cbList.Items.Add(new ListItem("p5_EX by DeathChaos, Sierra (Persona 5 EX 1.5.1) <br><span class=\"desc\">" +
                "Persona 5 EX Required Patches.</span>", "p5_EX: &p5_EX\n" +
                "# redirect uses of exact copy of GetEquipPersona to the first one to free some code space\n- [ be32, 0x001efdb8, 0x4806c085 ] \n- [ be32, 0x001efef0, 0x4806bf4d ] \n\n# Load Futaba navi voicepack for all IDs above 4\n- [ be32, 0x00745888, 0x2c1e000a ] # cmpwir30, 0xA\n- [ be32, 0x0074588c, 0x4081006c ] # ble  0x007458f8\n\n# prevent navi game over dialogue on encounters 790 and up\n- [ be32, 0x00b1be24, 0x480000f0 ] # NOP\n\n# test\n- [ be32, 0x006e6868, 0x281e03e7 ] #\n#- [ be32, 0x00baaa84, 0x00cf1718 ]\n# idk what the fuck this is but it fixes the random crash\n- [ be32, 0x00803370, 0x281b0000 ]\n\n# Boss voice stuff\n\n# Enable attack cue id on black mask voice set\n- [ be32, 0x00ba90ec, 0x00cf0918 ]\n\n# enable Intro BCD on all new encounters\n- [ be32, 0x00788088, 0x40800098 ] # bge  0x00788120\n\n# Disable Player Swordtrack loading\n- [ be32, 0x00265cc, 0x38600000 ] # li   param_1,0x0\n\n# Expand DLC Outfit BGM List\n# Skip DLC Check for new outfits\n- [ be32, 0x0019b830, 0x60000000 ]\n- [ be32, 0x0019b83c, 0x60000000 ]\n# Patch BGM table to redirect to new one\n- [ be32, 0x06cd00, 0x3fe000b4 ] # lis r31, 0xb4\n- [ be32, 0x06cd0c, 0x33ff4bf8 ] # addic r31, r31, 0x4bf8\n# Patch table size to new size 0x15\n- [ be32, 0x06cd5c, 0x2c1e0015 ] # cmpwi r30, 0x15\n# expand the table\n# Default BGM\n- [ be32, 0xB44BF8, 0x0000FFFF ]\n- [ be32, 0xB44BFC, 0x00000000 ]\n# bgm_01\n- [ be16, 0xB44C00, 0x0001 ]\n- [ be16, 0xB44C02, 0x7053 ]\n- [ be16, 0xB44C04, 0x0000 ]\n- [ be16, 0xB44C06, 0x2290 ]\n# bgm_02\n- [ be16, 0xB44C08, 0x0002 ]\n- [ be16, 0xB44C0A, 0x704A ]\n- [ be16, 0xB44C0C, 0x0000 ]\n- [ be16, 0xB44C0E, 0x2291 ]\n# bgm_03\n- [ be16, 0xB44C10, 0x0003 ]\n- [ be16, 0xB44C12, 0x7065 ]\n- [ be16, 0xB44C14, 0x0000 ]\n- [ be16, 0xB44C16, 0x2292 ]\n# bgm_04\n- [ be16, 0xB44C18, 0x0004 ]\n- [ be16, 0xB44C1A, 0x705C ]\n- [ be16, 0xB44C1C, 0x0000 ]\n- [ be16, 0xB44C1E, 0x2293 ]\n# bgm_05\n- [ be16, 0xB44C20, 0x0005 ]\n- [ be16, 0xB44C22, 0x7077 ]\n- [ be16, 0xB44C24, 0x0000 ]\n- [ be16, 0xB44C26, 0x2294 ]\n# bgm_06\n- [ be16, 0xB44C28, 0x0006 ]\n- [ be16, 0xB44C2A, 0x7092 ]\n- [ be16, 0xB44C2C, 0x0000 ]\n- [ be16, 0xB44C2E, 0x2295 ]\n# bgm_07\n- [ be16, 0xB44C30, 0x0007 ]\n- [ be16, 0xB44C32, 0x709b ]\n- [ be16, 0xB44C34, 0x0000 ]\n- [ be16, 0xB44C36, 0x2296 ]\n# bgm_08\n- [ be16, 0xB44C38, 0x0008 ]\n- [ be16, 0xB44C3A, 0x70a4 ]\n- [ be16, 0xB44C3C, 0x0000 ]\n- [ be16, 0xB44C3E, 0x2297 ]\n# bgm_09\n- [ be16, 0xB44C40, 0x0009 ]\n- [ be16, 0xB44C42, 0x70ad ]\n- [ be16, 0xB44C44, 0x0000 ]\n- [ be16, 0xB44C46, 0x2298 ]\n# bgm_10 - Original List ends here\n- [ be16, 0xB44C48, 0x000A ]\n- [ be16, 0xB44C4A, 0x706e ]\n- [ be16, 0xB44C4C, 0x0000 ]\n- [ be16, 0xB44C4E, 0x2299 ]\n# bgm_11 - Starlight (c0001_170_00.GMD)\n- [ be16, 0xB44C50, 0x000B ]\n- [ be16, 0xB44C52, 0x70b6 ]\n- [ be16, 0xB44C54, 0x0000 ]\n- [ be16, 0xB44C56, 0x229A ]\n# bgm_12 - Midwinter Uniform (c0001_171_00.GMD)\n- [ be16, 0xB44C58, 0x000C ]\n- [ be16, 0xB44C5A, 0x70bf ]\n- [ be16, 0xB44C5C, 0x0000 ]\n- [ be16, 0xB44C5E, 0x229B ]\n# bgm_13 - Midwinter Casual (c0001_172_00.GMD)\n- [ be16, 0xB44C60, 0x000D ]\n- [ be16, 0xB44C62, 0x70c8 ]\n- [ be16, 0xB44C64, 0x0000 ]\n- [ be16, 0xB44C66, 0x229C ]\n# bgm_14 - Featherman (c0001_173_00.GMD)\n- [ be16, 0xB44C68, 0x000E ]\n- [ be16, 0xB44C6A, 0x70d1 ]\n- [ be16, 0xB44C6C, 0x0000 ]\n- [ be16, 0xB44C6E, 0x229D ]\n# bgm_15 - Summer Break (P5S) (c0001_174_00.GMD)\n- [ be16, 0xB44C70, 0x000F ]\n- [ be16, 0xB44C72, 0x70da ]\n- [ be16, 0xB44C74, 0x0000 ]\n- [ be16, 0xB44C76, 0x229E ]\n# bgm_16 - Deminica Suit (No Helmet) (c0001_175_00.GMD)\n- [ be16, 0xB44C78, 0x0010 ]\n- [ be16, 0xB44C7A, 0x70e3 ]\n- [ be16, 0xB44C7C, 0x0000 ]\n- [ be16, 0xB44C7E, 0x229F ]\n# bgm_17 - New Cinema (c0001_176_00.GMD)\n- [ be16, 0xB44C80, 0x0011 ]\n- [ be16, 0xB44C82, 0x70ec ]\n- [ be16, 0xB44C84, 0x0000 ]\n- [ be16, 0xB44C86, 0x22A0 ]\n# bgm_18 - Ultramarine (Velvet Room) (c0001_177_00.GMD)\n- [ be16, 0xB44C88, 0x0012 ]\n- [ be16, 0xB44C8A, 0x70f5 ]\n- [ be16, 0xB44C8C, 0x0000 ]\n- [ be16, 0xB44C8E, 0x22A1 ]\n# bgm_19 - RESERVE (c0001_178_00.GMD)\n- [ be16, 0xB44C90, 0x0013 ]\n- [ be16, 0xB44C92, 0x70fe ]\n- [ be16, 0xB44C94, 0x0000 ]\n- [ be16, 0xB44C96, 0x22A2 ]\n# bgm_20 - RESERVE (c0001_179_00.GMD)\n- [ be16, 0xB44C98, 0x0014 ]\n- [ be16, 0xB44C9A, 0x7107 ]\n- [ be16, 0xB44C9C, 0x0000 ]\n- [ be16, 0xB44C9E, 0x22A3 ]\n\n# Increase red menu bg size\n- [ bef32,0x4c1400, 2.00000000 ]\n- [ bef32,0x4c4d9c, 2.00000000 ]\n- [ be32, 0x4c4cd8, 0x60000000 ]\n\n# Expand Active Skills to 2000\n- [ be32, 0x000444ac, 0x2c1b07d0 ] # idk, have > 799 checks tho\n- [ be32, 0x001d258c, 0x2c1f07d0 ]\n- [ be32, 0x002613bc, 0x2c0307d0 ]\n- [ be32, 0x00256850, 0x2c0307d0 ]\n- [ be32, 0x0026149c, 0x2c1e07d0 ]\n- [ be32, 0x00261598, 0x2c1e07d0 ]\n- [ be32, 0x00449ff8, 0x2c0e0000 ]\n- [ be32, 0x0051c130, 0x2c1c07d0 ]\n- [ be32, 0x007dd768, 0x2c1f07d0 ]\n- [ be32, 0x002586e4, 0x280307d0 ]\n- [ be32, 0x006816f8, 0x280507d0 ]\n- [ be32, 0x007e8398, 0x60000000 ]\n- [ be32, 0x007e839c, 0x60000000 ]\n- [ be32, 0x007e83a0, 0x60000000 ]\n- [ be32, 0x007e83a4, 0x60000000 ]\n- [ be32, 0x007f5bfc, 0x281d07d0 ]\n- [ be32, 0x0080f09c, 0x60000000 ] # nametags\n- [ be32, 0x0080f0a0, 0x60000000 ]\n- [ be32, 0x0080f0a4, 0x281d07d0 ]\n    \n- [ be32, 0x0082a010, 0x2c8307d0 ] # show skill > 799 in skill list\n- [ be32, 0x00829e18, 0x2c8307d0 ]\n- [ be32, 0x00829ea8, 0x2c8307d0 ]\n    \n- [ be32, 0x002500BC, 0x60000000 ] # from GetSkillData, originally returns Segment0 if bigger than 799\n- [ be32, 0x002500c0, 0x60000000 ]\n\n# expanding dialogue cutins test\n- [ be64, 0xb8e17c, 0x305f6d61696e5f30 ]\n- [ be64, 0xb8e184, 0x2f437574496e4d61 ]\n- [ be64, 0xb8e18c, 0x696e5f305f313100 ] # 0_main_0/CutInMain_0_11\n#\n- [ be64, 0xb8e198, 0x305f6d61696e5f30 ]\n- [ be64, 0xb8e1a0, 0x2f437574496e4d61 ]\n- [ be64, 0xb8e1a8, 0x696e5f305f313200 ] # 0_main_0/CutInMain_0_12\n#\n- [ be64, 0xb8e1b8, 0x305f6d61696e5f30 ]\n- [ be64, 0xb8e1c0, 0x2f437574496e4d61 ]\n- [ be64, 0xb8e1c8, 0x696e5f305f313300 ] # 0_main_0/CutInMain_0_13\n#\n- [ be64, 0xb8e1d4, 0x305f6d61696e5f30 ]\n- [ be64, 0xb8e1dc, 0x2f437574496e4d61 ]\n- [ be64, 0xb8e1e4, 0x696e5f305f313400 ] # 0_main_0/CutInMain_0_14\n# update count\n- [ be32, 0x00df305c, 15 ]\n# update pointer to new pointer list\n- [ be32, 0x00df3060, 0x0074b128 ] #\n# pointers to names\n- [ be32, 0x0074b128, 0x00b81314 ] #\n- [ be32, 0x0074b12C, 0x00b8132c ] #\n- [ be32, 0x0074b130, 0x00b81344 ] #\n- [ be32, 0x0074b134, 0x00b8135c ] #\n- [ be32, 0x0074b138, 0x00b81374 ] #\n- [ be32, 0x0074b13C, 0x00b8138c ] #\n- [ be32, 0x0074b140, 0x00b813a4 ] #\n- [ be32, 0x0074b144, 0x00b813bc ] #\n- [ be32, 0x0074b148, 0x00b813d4 ] #\n- [ be32, 0x0074b14C, 0x00b813ec ] #\n- [ be32, 0x0074b150, 0x00b81404 ] #\n- [ be32, 0x0074b154, 0x00b8e17c ] # Kasumi, 11\n- [ be32, 0x0074b158, 0x00b8e198 ] # Sumire, 12\n- [ be32, 0x0074b15C, 0x00b8e1b8 ] # Maruki, 13\n- [ be32, 0x0074b160, 0x00b8e1d4 ] # Maruki, 14\n\n# apply Akechi encounter code to encounters 830 and up\n- [ be32, 0x00630848, 0x484fcea4 ] #   b 0x00b2d6ec\n- [ be32, 0x00b2d6ec, 0x7bff0020 ] #   rldicl  r31, r31, 0x0, 0x20\n- [ be32, 0x00b2d6f0, 0x2c04033E ] #   cmpwi   r4, 0x33E\n- [ be32, 0x00b2d6f4, 0x40800008 ] #   bge     8\n- [ be32, 0x00b2d6f8, 0x4bb03154 ] #   b 0x0063084c\n- [ be32, 0x00b2d6fc, 0x4bb03ea8 ] #   b 0x006315a4\n#\n#- [ be32, 0x006a7fec, 0x4280ff68 ] #   b 0x006a7f54\n\n# Agnes summon fix\n# The game normally checks if Persona ID is specifically Johanna to do something\n# to make this work with Agnes, we change the check to if Persona is NOT Anat\n# this is needed because Makoto's bike animations are a special condition \n- [ be32, 0x00285e94, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00285e98, 0x40820020 ] #   bne  \n\n- [ be32, 0x0067186c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00671870, 0x41820008 ] #   beq  \n\n- [ be32, 0x00671a00, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00671a04, 0x41820008 ] #   beq  \n\n- [ be32, 0x006750cc, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006750d0, 0x41820008 ] #   beq  \n\n- [ be32, 0x006752f0, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006752f4, 0x41820008 ] #   beq  \n\n- [ be32, 0x0068097c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00680980, 0x4182000c ] #   beq  \n\n- [ be32, 0x00687abc, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00687ac4, 0x41820010 ] #   beq  \n\n- [ be32, 0x0069ba94, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0069ba98, 0x41820008 ] #   beq  \n\n- [ be32, 0x0069c288, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0069c28c, 0x41820008 ] #   beq  \n\n- [ be32, 0x0069c358, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0069c35c, 0x41820008 ] #   beq  \n\n- [ be32, 0x006ae7d8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006ae7dc, 0x41820008 ] #   beq  \n\n- [ be32, 0x006aeaa8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006aeaac, 0x40820008 ] #   bne  \n\n- [ be32, 0x006eceb4, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006eceb8, 0x41820008 ] #   beq  \n\n- [ be32, 0x006ed5d8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006ed5dc, 0x41820008 ] #   beq  \n\n- [ be32, 0x006edcbc, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006edcc0, 0x41820018 ] #   beq  \n\n- [ be32, 0x006ee53c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006ee540, 0x41820008 ] #   beq  \n\n- [ be32, 0x006ef490, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006ef494, 0x41820008 ] #   beq  \n\n- [ be32, 0x006ef924, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x006ef928, 0x40820008 ] #   bne  \n\n- [ be32, 0x00701114, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00701118, 0x4182008c ] #   beq  \n\n- [ be32, 0x00701868, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0070186c, 0x41820008 ] #   beq  \n\n- [ be32, 0x0070e8d4, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0070e8d8, 0x41820008 ] #   beq  \n\n- [ be32, 0x0070f07c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0070f080, 0x41820008 ] #   beq  \n\n- [ be32, 0x0070fe0c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0070fe10, 0x40820008 ] #   bne  \n\n- [ be32, 0x00714278, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0071427c, 0x40820008 ] #   bne  \n\n- [ be32, 0x00716de0, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00716de4, 0x40820008 ] #   bne  \n\n- [ be32, 0x007170b4, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x007170b8, 0x40820008 ] #   bne  \n\n- [ be32, 0x0071e76c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0071e770, 0x40820008 ] #   bne  \n\n- [ be32, 0x00755518, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00755520, 0x41820010 ] #   beq  \n\n- [ be32, 0x00755cf8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00755d00, 0x41820010 ] #   beq  \n\n- [ be32, 0x0075d708, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0075d70c, 0x41820010 ] #   beq  \n\n- [ be32, 0x0075df34, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0075df38, 0x41820010 ] #   beq  \n\n- [ be32, 0x00767d84, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00767d88, 0x41820008 ] #   beq  \n\n- [ be32, 0x00767f3c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00767f44, 0x41820010 ] #   beq  \n\n- [ be32, 0x0076886c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00768874, 0x41820010 ] #   beq  \n\n- [ be32, 0x0076a3e0, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0076a3e8, 0x41820010 ] #   beq  \n\n- [ be32, 0x0077163c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00771640, 0x41820010 ] #   beq  \n\n- [ be32, 0x00772040, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00772044, 0x41820010 ] #   beq  \n\n- [ be32, 0x007787e4, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x007787e8, 0x41820008 ] #   beq  \n\n- [ be32, 0x0077901c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00779020, 0x41820008 ] #   beq  \n\n- [ be32, 0x00779300, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00779304, 0x41820008 ] #   beq  \n\n- [ be32, 0x00780d88, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00780d90, 0x41820010 ] #   beq  \n\n- [ be32, 0x00781568, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00781570, 0x41820010 ] #   beq  \n\n- [ be32, 0x0078705c, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00787060, 0x41820010 ] #   beq  \n\n- [ be32, 0x00787740, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00787744, 0x41820010 ] #   beq  \n\n- [ be32, 0x0078ead8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0078eae0, 0x41820010 ] #   beq  \n\n- [ be32, 0x0078f2d8, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x0078f2e0, 0x41820010 ] #   beq  \n\n- [ be32, 0x00793960, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00793968, 0x41820010 ] #   beq  \n\n- [ be32, 0x00794230, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x00794238, 0x41820010 ] #   beq  \n\n- [ be32, 0x007a20b0, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x007a20b8, 0x41820010 ] #   beq  \n\n- [ be32, 0x007a2a28, 0x2c0300d8 ] #   cmpwir3, 0xd8\n- [ be32, 0x007a2a30, 0x41820010 ] #   beq"));
            cbList.Items.Add(new ListItem("p5_mod_SPRX by TGE (Mod SPRX Support 1.8.1) <br><span class=\"desc\">" +
                "Persona 5 EX Required Patches.</span>", "p5_mod_SPRX: &p5_mod_SPRX\n" +
                "- [ be32, 0xB4669C, 0x26090058 ] # replace _sys_heap_delete_heap with sys_prx_load_module\n- [ be32, 0xB46678, 0x9f18429d ] # replace _sys_heap_malloc with sys_prx_start_module\n- [ byte, 0xB4695F, 0 ]    # set cellSail import count to 0\n\n# inject loader code into main\n# bin2rpcs3patch begin shk_elf_loader_P5\n- [ be32, 0x10250, 0x48a2bc21 ]\n- [ be32, 0xa3be70, 0xf821ff81 ]\n- [ be32, 0xa3be74, 0x7c0802a6 ]\n- [ be32, 0xa3be78, 0xf8010090 ]\n- [ be32, 0xa3be7c, 0xf84100a8 ]\n- [ be32, 0xa3be80, 0x3c6000a4 ]\n- [ be32, 0xa3be84, 0x3863bed0 ]\n- [ be32, 0xa3be88, 0x38800000 ]\n- [ be32, 0xa3be8c, 0x38a00000 ]\n- [ be32, 0xa3be90, 0x48109fcd ]\n- [ be32, 0xa3be94, 0x7c6307b4 ]\n- [ be32, 0xa3be98, 0x38800000 ]\n- [ be32, 0xa3be9c, 0x38a00000 ]\n- [ be32, 0xa3bea0, 0x38c10070 ]\n- [ be32, 0xa3bea4, 0x38e00000 ]\n- [ be32, 0xa3bea8, 0x39000000 ]\n- [ be32, 0xa3beac, 0x48109e91 ]\n- [ be32, 0xa3beb0, 0xe8010090 ]\n- [ be32, 0xa3beb4, 0xe84100a8 ]\n- [ be32, 0xa3beb8, 0x38210080 ]\n- [ be32, 0xa3bebc, 0x7c0803a6 ]\n- [ be32, 0xa3bec0, 0x4e800020 ]\n- [ be32, 0xa3bec4, 0x60000000 ]\n- [ be32, 0xa3bec8, 0x60000000 ]\n- [ be32, 0xa3becc, 0x60000000 ]\n- [ be32, 0xa3bed0, 0x2f617070 ]\n- [ be32, 0xa3bed4, 0x5f686f6d ]\n- [ be32, 0xa3bed8, 0x652f6d6f ]\n- [ be32, 0xa3bedc, 0x642e7370 ]\n- [ be32, 0xa3bee0, 0x72780000 ]\n- [ be32, 0xa3bee4, 0x0 ]\n- [ be32, 0xa3bee8, 0x0 ]\n- [ be32, 0xa3beec, 0x0 ]\n# bin2rpcs3patch end\n\n# bin2rpcs3patch begin shk_elf_inject_P5\n- [ be32, 0xa3be6c, 0x480000dc ]\n- [ be32, 0x9209b0, 0x4811b5a0 ]\n- [ be32, 0x6cf04, 0x489cf054 ]\n- [ be32, 0x10db4, 0x48a2b1ac ]\n- [ be32, 0x1e9cfc, 0x4885226c ]\n- [ be32, 0x1e9d54, 0x4885221c ]\n- [ be32, 0x1e9d28, 0x48852250 ]\n- [ be32, 0x1edff8, 0x4884df88 ]\n- [ be32, 0x1ee000, 0x4884df88 ]\n- [ be32, 0x24ba4c, 0x487f0544 ]\n- [ be32, 0x24bf5c, 0x487f003c ]\n- [ be32, 0x7ba410, 0x48281b90 ]\n- [ be32, 0x7ba448, 0x48281b60 ]\n- [ be32, 0x74c12c, 0x482efe84 ]\n- [ be32, 0x74b124, 0x482f0e94 ]\n- [ be32, 0x1c2c74, 0x4887934c ]\n- [ be32, 0x118280, 0x48923d48 ]\n- [ be32, 0x426ab8, 0x48615518 ]\n- [ be32, 0x735164, 0x48306e74 ]\n- [ be32, 0x967abc, 0x480d4524 ]\n- [ be32, 0x190ac, 0x48a22f3c ]\n- [ be32, 0x877b68, 0x481c4488 ]\n- [ be32, 0xb25390, 0x4bf16c68 ]\n- [ be32, 0xb2d664, 0x4bf0e99c ]\n- [ be32, 0x39b74, 0x48a02494 ]\n- [ be32, 0x62dfdc, 0x4840e034 ]\n- [ be32, 0x258948, 0x487e36d0 ]\n- [ be32, 0x264950, 0x487d76d0 ]\n- [ be32, 0x2636dc, 0x487d894c ]\n- [ be32, 0x263728, 0x487d8908 ]\n- [ be32, 0x263660, 0x487d89d8 ]\n- [ be32, 0x2637ac, 0x487d8894 ]\n- [ be32, 0x263df8, 0x487d8250 ]\n- [ be32, 0x511d6c, 0x4852a2e4 ]\n- [ be32, 0x74a3e8, 0x482f1c70 ]\n- [ be32, 0x74a378, 0x482f1ce8 ]\n- [ be32, 0x10fca4, 0x4892c3c4 ]\n- [ be32, 0xb20618, 0x4bf1ba58 ]\n- [ be32, 0x1e9ac0, 0x488525b8 ]\n- [ be32, 0x1e9b1c, 0x48852564 ]\n- [ be32, 0x1e9be0, 0x488524a8 ]\n- [ be32, 0x1e9b7c, 0x48852514 ]\n- [ be32, 0x26b390, 0x487d0d08 ]\n- [ be32, 0x26b360, 0x487d0d40 ]\n- [ be32, 0x26b2b0, 0x487d0df8 ]\n- [ be32, 0x26b2e0, 0x487d0dd0 ]\n- [ be32, 0x26b320, 0x487d0d98 ]\n- [ be32, 0x26aff0, 0x487d10d0 ]\n- [ be32, 0x26b094, 0x487d1034 ]\n- [ be32, 0x26b148, 0x487d0f88 ]\n- [ be32, 0x26b1fc, 0x487d0edc ]\n- [ be32, 0x72360c, 0x48318ad4 ]\n- [ be32, 0xaf22e4, 0x4bf49e04 ]\n- [ be32, 0x114c7c, 0x48927474 ]\n- [ be32, 0xac0a6c, 0x4bf7b68c ]\n- [ be32, 0x785578, 0x482b6b88 ]\n- [ be32, 0x7852a4, 0x482b6e64 ]\n- [ be32, 0xb24b74, 0x4bf1759c ]\n- [ be32, 0x3a5d8, 0x48a01b40 ]\n- [ be32, 0x3a618, 0x48a01b08 ]\n- [ be32, 0x3a658, 0x48a01ad0 ]\n- [ be32, 0x3a698, 0x48a01a98 ]\n- [ be32, 0x425b0c, 0x4861662c ]\n- [ be32, 0x114b74, 0x489275cc ]\n- [ be32, 0xab8ed4, 0x4bf83274 ]\n- [ be32, 0x3735d8, 0x486c8b78 ]\n- [ be32, 0x630060, 0x4840c0f8 ]\n- [ be32, 0x263b94, 0x487d85cc ]\n- [ be32, 0x74d250, 0x482eef18 ]\n- [ be32, 0x3b9644, 0x48682b2c ]\n- [ be32, 0x74aac0, 0x482f16b8 ]\n- [ be32, 0x1ee1bc, 0x4884dfc4 ]\n- [ be32, 0xb1c1a0, 0x4bf1ffe8 ]\n- [ be32, 0xb1c398, 0x4bf1fdf8 ]\n- [ be32, 0xb1c610, 0x4bf1fb88 ]\n- [ be32, 0xb20ec8, 0x4bf1b2d8 ]\n- [ be32, 0xb1ca18, 0x4bf1f790 ]\n- [ be32, 0xb21980, 0x4bf1a830 ]\n- [ be32, 0xb21bf8, 0x4bf1a5c0 ]\n- [ be32, 0xb21e28, 0x4bf1a398 ]\n- [ be32, 0xb22138, 0x4bf1a090 ]\n- [ be32, 0xb22f60, 0x4bf19270 ]\n- [ be32, 0xb1bf38, 0x4bf202a0 ]\n- [ be32, 0xaf3cb0, 0x4bf48530 ]\n- [ be32, 0x1cf704, 0x4886cae4 ]\n- [ be32, 0x829ce8, 0x48212508 ]\n- [ be32, 0x43fac, 0x489f824c ]\n- [ be32, 0x262258, 0x487d9fa8 ]\n- [ be32, 0x259658, 0x487e2bb0 ]\n- [ be32, 0x252a10, 0x487e9800 ]\n- [ be32, 0x264708, 0x487d7b10 ]\n- [ be32, 0x263580, 0x487d8ca0 ]\n- [ be32, 0x2635a0, 0x487d8c88 ]\n- [ be32, 0x745e28, 0x482f6408 ]\n- [ be32, 0x256830, 0x487e5a08 ]\n- [ be32, 0x25b888, 0x487e09b8 ]\n- [ be32, 0x25b740, 0x487e0b08 ]\n- [ be32, 0x25b7b8, 0x487e0a98 ]\n- [ be32, 0x24bb54, 0x487f0704 ]\n- [ be32, 0x661220, 0x483db040 ]\n- [ be32, 0x338a04, 0x48703864 ]\n- [ be32, 0x7ed620, 0x4824ec50 ]\n- [ be32, 0x7af1c0, 0x4828d0b8 ]\n- [ be32, 0x784d18, 0x482b7568 ]\n- [ be32, 0x3a6e4, 0x48a01ba4 ]\n- [ be32, 0x3a70c, 0x48a01b84 ]\n- [ be32, 0x25906c, 0x487e322c ]\n- [ be32, 0x435c0, 0x489f8ce0 ]\n- [ be32, 0xb24f84, 0x4bf17324 ]\n- [ be32, 0xb1bd50, 0x4bf20560 ]\n- [ be32, 0xb25348, 0x4bf16f70 ]\n- [ be32, 0x74b294, 0x482f102c ]\n- [ be32, 0xb24938, 0x4bf17990 ]\n- [ be32, 0x60b90, 0x489db740 ]\n- [ be32, 0xa3bef0, 0xf821ff81 ]\n- [ be32, 0xa3bef4, 0xfbe10078 ]\n- [ be32, 0xa3bef8, 0x7fe802a6 ]\n- [ be32, 0xa3befc, 0xfbe10090 ]\n- [ be32, 0xa3bf00, 0x3fe000ce ]\n- [ be32, 0xa3bf04, 0x63ff2cb8 ]\n- [ be32, 0xa3bf08, 0x83ff0000 ]\n- [ be32, 0xa3bf0c, 0x7fe0fa14 ]\n- [ be32, 0xa3bf10, 0x83ff0000 ]\n- [ be32, 0xa3bf14, 0x801f0000 ]\n- [ be32, 0xa3bf18, 0x7c0903a6 ]\n- [ be32, 0xa3bf1c, 0xf8410028 ]\n- [ be32, 0xa3bf20, 0x805f0004 ]\n- [ be32, 0xa3bf24, 0x7c3f0b78 ]\n- [ be32, 0xa3bf28, 0x4e800421 ]\n- [ be32, 0xa3bf2c, 0xe8410028 ]\n- [ be32, 0xa3bf30, 0xebe10000 ]\n- [ be32, 0xa3bf34, 0xe81f0010 ]\n- [ be32, 0xa3bf38, 0x7c0803a6 ]\n- [ be32, 0xa3bf3c, 0x7fe1fb78 ]\n- [ be32, 0xa3bf40, 0xebfffff8 ]\n- [ be32, 0xa3bf44, 0x4e800020 ]\n- [ be32, 0xa3bf48, 0x38000000 ]\n- [ be32, 0xa3bf4c, 0x4bffffa4 ]\n- [ be32, 0xa3bf50, 0x38000004 ]\n- [ be32, 0xa3bf54, 0x4bffff9c ]\n- [ be32, 0xa3bf58, 0x38000008 ]\n- [ be32, 0xa3bf5c, 0x4bffff94 ]\n- [ be32, 0xa3bf60, 0x3800000c ]\n- [ be32, 0xa3bf64, 0x4bffff8c ]\n- [ be32, 0xa3bf68, 0x38000010 ]\n- [ be32, 0xa3bf6c, 0x4bffff84 ]\n- [ be32, 0xa3bf70, 0x38000014 ]\n- [ be32, 0xa3bf74, 0x4bffff7c ]\n- [ be32, 0xa3bf78, 0x38000018 ]\n- [ be32, 0xa3bf7c, 0x4bffff74 ]\n- [ be32, 0xa3bf80, 0x3800001c ]\n- [ be32, 0xa3bf84, 0x4bffff6c ]\n- [ be32, 0xa3bf88, 0x38000020 ]\n- [ be32, 0xa3bf8c, 0x4bffff64 ]\n- [ be32, 0xa3bf90, 0x38000024 ]\n- [ be32, 0xa3bf94, 0x4bffff5c ]\n- [ be32, 0xa3bf98, 0x38000028 ]\n- [ be32, 0xa3bf9c, 0x4bffff54 ]\n- [ be32, 0xa3bfa0, 0x3800002c ]\n- [ be32, 0xa3bfa4, 0x4bffff4c ]\n- [ be32, 0xa3bfa8, 0x38000030 ]\n- [ be32, 0xa3bfac, 0x4bffff44 ]\n- [ be32, 0xa3bfb0, 0x38000034 ]\n- [ be32, 0xa3bfb4, 0x4bffff3c ]\n- [ be32, 0xa3bfb8, 0x38000038 ]\n- [ be32, 0xa3bfbc, 0x4bffff34 ]\n- [ be32, 0xa3bfc0, 0x3800003c ]\n- [ be32, 0xa3bfc4, 0x4bffff2c ]\n- [ be32, 0xa3bfc8, 0x38000040 ]\n- [ be32, 0xa3bfcc, 0x4bffff24 ]\n- [ be32, 0xa3bfd0, 0x38000044 ]\n- [ be32, 0xa3bfd4, 0x4bffff1c ]\n- [ be32, 0xa3bfd8, 0x38000048 ]\n- [ be32, 0xa3bfdc, 0x4bffff14 ]\n- [ be32, 0xa3bfe0, 0x3800004c ]\n- [ be32, 0xa3bfe4, 0x4bffff0c ]\n- [ be32, 0xa3bfe8, 0x38000050 ]\n- [ be32, 0xa3bfec, 0x4bffff04 ]\n- [ be32, 0xa3bff0, 0x38000054 ]\n- [ be32, 0xa3bff4, 0x4bfffefc ]\n- [ be32, 0xa3bff8, 0x38000058 ]\n- [ be32, 0xa3bffc, 0x4bfffef4 ]\n- [ be32, 0xa3c000, 0x3800005c ]\n- [ be32, 0xa3c004, 0x4bfffeec ]\n- [ be32, 0xa3c008, 0x38000060 ]\n- [ be32, 0xa3c00c, 0x4bfffee4 ]\n- [ be32, 0xa3c010, 0x38000064 ]\n- [ be32, 0xa3c014, 0x4bfffedc ]\n- [ be32, 0xa3c018, 0x38000068 ]\n- [ be32, 0xa3c01c, 0x4bfffed4 ]\n- [ be32, 0xa3c020, 0x3800006c ]\n- [ be32, 0xa3c024, 0x4bfffecc ]\n- [ be32, 0xa3c028, 0x38000070 ]\n- [ be32, 0xa3c02c, 0x4bfffec4 ]\n- [ be32, 0xa3c030, 0x38000074 ]\n- [ be32, 0xa3c034, 0x4bfffebc ]\n- [ be32, 0xa3c038, 0x38000078 ]\n- [ be32, 0xa3c03c, 0x4bfffeb4 ]\n- [ be32, 0xa3c040, 0x3800007c ]\n- [ be32, 0xa3c044, 0x4bfffeac ]\n- [ be32, 0xa3c048, 0x38000080 ]\n- [ be32, 0xa3c04c, 0x4bfffea4 ]\n- [ be32, 0xa3c050, 0x38000084 ]\n- [ be32, 0xa3c054, 0x4bfffe9c ]\n- [ be32, 0xa3c058, 0x38000088 ]\n- [ be32, 0xa3c05c, 0x4bfffe94 ]\n- [ be32, 0xa3c060, 0x3800008c ]\n- [ be32, 0xa3c064, 0x4bfffe8c ]\n- [ be32, 0xa3c068, 0x38000090 ]\n- [ be32, 0xa3c06c, 0x4bfffe84 ]\n- [ be32, 0xa3c070, 0x38000094 ]\n- [ be32, 0xa3c074, 0x4bfffe7c ]\n- [ be32, 0xa3c078, 0x38000098 ]\n- [ be32, 0xa3c07c, 0x4bfffe74 ]\n- [ be32, 0xa3c080, 0x3800009c ]\n- [ be32, 0xa3c084, 0x4bfffe6c ]\n- [ be32, 0xa3c088, 0x380000a0 ]\n- [ be32, 0xa3c08c, 0x4bfffe64 ]\n- [ be32, 0xa3c090, 0x380000a4 ]\n- [ be32, 0xa3c094, 0x4bfffe5c ]\n- [ be32, 0xa3c098, 0x380000a8 ]\n- [ be32, 0xa3c09c, 0x4bfffe54 ]\n- [ be32, 0xa3c0a0, 0x380000ac ]\n- [ be32, 0xa3c0a4, 0x4bfffe4c ]\n- [ be32, 0xa3c0a8, 0x380000b0 ]\n- [ be32, 0xa3c0ac, 0x4bfffe44 ]\n- [ be32, 0xa3c0b0, 0x380000b4 ]\n- [ be32, 0xa3c0b4, 0x4bfffe3c ]\n- [ be32, 0xa3c0b8, 0x380000b8 ]\n- [ be32, 0xa3c0bc, 0x4bfffe34 ]\n- [ be32, 0xa3c0c0, 0x380000bc ]\n- [ be32, 0xa3c0c4, 0x4bfffe2c ]\n- [ be32, 0xa3c0c8, 0x380000c0 ]\n- [ be32, 0xa3c0cc, 0x4bfffe24 ]\n- [ be32, 0xa3c0d0, 0x380000c4 ]\n- [ be32, 0xa3c0d4, 0x4bfffe1c ]\n- [ be32, 0xa3c0d8, 0x380000c8 ]\n- [ be32, 0xa3c0dc, 0x4bfffe14 ]\n- [ be32, 0xa3c0e0, 0x380000cc ]\n- [ be32, 0xa3c0e4, 0x4bfffe0c ]\n- [ be32, 0xa3c0e8, 0x380000d0 ]\n- [ be32, 0xa3c0ec, 0x4bfffe04 ]\n- [ be32, 0xa3c0f0, 0x380000d4 ]\n- [ be32, 0xa3c0f4, 0x4bfffdfc ]\n- [ be32, 0xa3c0f8, 0x380000d8 ]\n- [ be32, 0xa3c0fc, 0x4bfffdf4 ]\n- [ be32, 0xa3c100, 0x380000dc ]\n- [ be32, 0xa3c104, 0x4bfffdec ]\n- [ be32, 0xa3c108, 0x380000e0 ]\n- [ be32, 0xa3c10c, 0x4bfffde4 ]\n- [ be32, 0xa3c110, 0x380000e4 ]\n- [ be32, 0xa3c114, 0x4bfffddc ]\n- [ be32, 0xa3c118, 0x380000e8 ]\n- [ be32, 0xa3c11c, 0x4bfffdd4 ]\n- [ be32, 0xa3c120, 0x380000ec ]\n- [ be32, 0xa3c124, 0x4bfffdcc ]\n- [ be32, 0xa3c128, 0x380000f0 ]\n- [ be32, 0xa3c12c, 0x4bfffdc4 ]\n- [ be32, 0xa3c130, 0x380000f4 ]\n- [ be32, 0xa3c134, 0x4bfffdbc ]\n- [ be32, 0xa3c138, 0x380000f8 ]\n- [ be32, 0xa3c13c, 0x4bfffdb4 ]\n- [ be32, 0xa3c140, 0x380000fc ]\n- [ be32, 0xa3c144, 0x4bfffdac ]\n- [ be32, 0xa3c148, 0x38000100 ]\n- [ be32, 0xa3c14c, 0x4bfffda4 ]\n- [ be32, 0xa3c150, 0x38000104 ]\n- [ be32, 0xa3c154, 0x4bfffd9c ]\n- [ be32, 0xa3c158, 0x38000108 ]\n- [ be32, 0xa3c15c, 0x4bfffd94 ]\n- [ be32, 0xa3c160, 0x3800010c ]\n- [ be32, 0xa3c164, 0x4bfffd8c ]\n- [ be32, 0xa3c168, 0x38000110 ]\n- [ be32, 0xa3c16c, 0x4bfffd84 ]\n- [ be32, 0xa3c170, 0x38000114 ]\n- [ be32, 0xa3c174, 0x4bfffd7c ]\n- [ be32, 0xa3c178, 0x38000118 ]\n- [ be32, 0xa3c17c, 0x4bfffd74 ]\n- [ be32, 0xa3c180, 0x3800011c ]\n- [ be32, 0xa3c184, 0x4bfffd6c ]\n- [ be32, 0xa3c188, 0x38000120 ]\n- [ be32, 0xa3c18c, 0x4bfffd64 ]\n- [ be32, 0xa3c190, 0x38000124 ]\n- [ be32, 0xa3c194, 0x4bfffd5c ]\n- [ be32, 0xa3c198, 0x38000128 ]\n- [ be32, 0xa3c19c, 0x4bfffd54 ]\n- [ be32, 0xa3c1a0, 0x3800012c ]\n- [ be32, 0xa3c1a4, 0x4bfffd4c ]\n- [ be32, 0xa3c1a8, 0x38000130 ]\n- [ be32, 0xa3c1ac, 0x4bfffd44 ]\n- [ be32, 0xa3c1b0, 0x38000134 ]\n- [ be32, 0xa3c1b4, 0x4bfffd3c ]\n- [ be32, 0xa3c1b8, 0x38000138 ]\n- [ be32, 0xa3c1bc, 0x4bfffd34 ]\n- [ be32, 0xa3c1c0, 0x3800013c ]\n- [ be32, 0xa3c1c4, 0x4bfffd2c ]\n- [ be32, 0xa3c1c8, 0x38000140 ]\n- [ be32, 0xa3c1cc, 0x4bfffd24 ]\n- [ be32, 0xa3c1d0, 0x38000144 ]\n- [ be32, 0xa3c1d4, 0x4bfffd1c ]\n- [ be32, 0xa3c1d8, 0x38000148 ]\n- [ be32, 0xa3c1dc, 0x4bfffd14 ]\n- [ be32, 0xa3c1e0, 0x3800014c ]\n- [ be32, 0xa3c1e4, 0x4bfffd0c ]\n- [ be32, 0xa3c1e8, 0x38000150 ]\n- [ be32, 0xa3c1ec, 0x4bfffd04 ]\n- [ be32, 0xa3c1f0, 0x38000154 ]\n- [ be32, 0xa3c1f4, 0x4bfffcfc ]\n- [ be32, 0xa3c1f8, 0x38000158 ]\n- [ be32, 0xa3c1fc, 0x4bfffcf4 ]\n- [ be32, 0xa3c200, 0x3800015c ]\n- [ be32, 0xa3c204, 0x4bfffcec ]\n- [ be32, 0xa3c208, 0x38000160 ]\n- [ be32, 0xa3c20c, 0x4bfffce4 ]\n- [ be32, 0xa3c210, 0x38000164 ]\n- [ be32, 0xa3c214, 0x4bfffcdc ]\n- [ be32, 0xa3c218, 0x38000168 ]\n- [ be32, 0xa3c21c, 0x4bfffcd4 ]\n- [ be32, 0xa3c220, 0x3800016c ]\n- [ be32, 0xa3c224, 0x4bfffccc ]\n- [ be32, 0xa3c228, 0x38000170 ]\n- [ be32, 0xa3c22c, 0x4bfffcc4 ]\n- [ be32, 0xa3c230, 0x38000174 ]\n- [ be32, 0xa3c234, 0x4bfffcbc ]\n- [ be32, 0xa3c238, 0x38000178 ]\n- [ be32, 0xa3c23c, 0x4bfffcb4 ]\n- [ be32, 0xa3c240, 0x3800017c ]\n- [ be32, 0xa3c244, 0x4bfffcac ]\n- [ be32, 0xa3c248, 0x38000180 ]\n- [ be32, 0xa3c24c, 0x4bfffca4 ]\n- [ be32, 0xa3c250, 0x38000184 ]\n- [ be32, 0xa3c254, 0x4bfffc9c ]\n- [ be32, 0xa3c258, 0x38000188 ]\n- [ be32, 0xa3c25c, 0x4bfffc94 ]\n- [ be32, 0xa3c260, 0x3800018c ]\n- [ be32, 0xa3c264, 0x4bfffc8c ]\n- [ be32, 0xa3c268, 0x38000190 ]\n- [ be32, 0xa3c26c, 0x4bfffc84 ]\n- [ be32, 0xa3c270, 0x38000194 ]\n- [ be32, 0xa3c274, 0x4bfffc7c ]\n- [ be32, 0xa3c278, 0x38000198 ]\n- [ be32, 0xa3c27c, 0x4bfffc74 ]\n- [ be32, 0xa3c280, 0x3800019c ]\n- [ be32, 0xa3c284, 0x4bfffc6c ]\n- [ be32, 0xa3c288, 0x380001a0 ]\n- [ be32, 0xa3c28c, 0x4bfffc64 ]\n- [ be32, 0xa3c290, 0x380001a4 ]\n- [ be32, 0xa3c294, 0x4bfffc5c ]\n- [ be32, 0xa3c298, 0x380001a8 ]\n- [ be32, 0xa3c29c, 0x4bfffc54 ]\n- [ be32, 0xa3c2a0, 0x380001ac ]\n- [ be32, 0xa3c2a4, 0x4bfffc4c ]\n- [ be32, 0xa3c2a8, 0x380001b0 ]\n- [ be32, 0xa3c2ac, 0x4bfffc44 ]\n- [ be32, 0xa3c2b0, 0x380001b4 ]\n- [ be32, 0xa3c2b4, 0x4bfffc3c ]\n- [ be32, 0xa3c2b8, 0x380001b8 ]\n- [ be32, 0xa3c2bc, 0x4bfffc34 ]\n- [ be32, 0xa3c2c0, 0x380001bc ]\n- [ be32, 0xa3c2c4, 0x4bfffc2c ]\n- [ be32, 0xa3c2c8, 0x380001c0 ]\n- [ be32, 0xa3c2cc, 0x4bfffc24 ]\n- [ be32, 0xa3c2d0, 0x380001c4 ]\n- [ be32, 0xa3c2d4, 0x4bfffc1c ]\n- [ be32, 0xce2cb8, 0xbadf00d ]\n# bin2rpcs3patch end"));
            // TGEnigma
            cbList.Items.Add(new ListItem("p5_ModSupport by TGEnigma (Mod Cpk Support) <br><span class=\"desc\">" +
                "File replacement through mod.cpk.</span>", "p5_ModSupport: &p5_ModSupport\n" +
                "# make %s/hdd.cpk -> %s%s/mod.cpk\n- [ be32, 0x00B4D638, 0x25732573 ]\n- [ be32, 0x00B4D63C, 0x2F6D6F64 ]\n- [ be32, 0x00B4D640, 0x2E63706B ]\n \n# make mod.cpk file path\n- [ be32, 0x00114CA4, 0x3C6000B5 ] # lis    r3, cpkPathString@ha\n- [ be32, 0x00114CA8, 0x33E3D638 ] # addic  r31, r3, cpkPathString@l\n- [ be32, 0x00114CAC, 0x48968BEB ] # bla    getInstallPath\n- [ be32, 0x00114CB0, 0x60000000 ] # nop\n- [ be32, 0x00114CB4, 0x7C7E1B78 ] # mr     r30, r3\n- [ be32, 0x00114CB8, 0x48968BF7 ] # bla    getInstallPath2\n- [ be32, 0x00114CBC, 0x60000000 ] # nop\n- [ be32, 0x00114CC0, 0x33A10070 ] # addic  r29, r1, 0x70\n- [ be32, 0x00114CC4, 0x7C661B78 ] # mr     r6, r3\n- [ be32, 0x00114CC8, 0x7FA3EB78 ] # mr     r3, r29\n- [ be32, 0x00114CCC, 0x7FE4FB78 ] # mr     r4, r31\n- [ be32, 0x00114CD0, 0x7FC5F378 ] # mr     r5, r30\n- [ be32, 0x00114CD4, 0x48AD567F ] # bla    sprintf\n- [ be32, 0x00114CD8, 0x60000000 ] # nop\n- [ be32, 0x00114CDC, 0x48B44A9E ] # ba     branchOffset\n- [ be32, 0x00114CE0, 0x60000000 ] # nop\n   \n# trampoline\n- [ be32, 0x00B44A9C, 0x7FA3EB78 ] # mr     r3, r29\n- [ be32, 0x00B44AA0, 0x48114B77 ] # bla    criFsBindCpk\n- [ be32, 0x00B44AA4, 0x60000000 ] # nop\n- [ be32, 0x00B44AA8, 0x3880000A ] # li     r4, 0xA\n- [ be32, 0x00B44AAC, 0x48AB8ED7 ] # bla    criFsBindPatch\n- [ be32, 0x00B44AB0, 0x60000000 ] # nop\n- [ be32, 0x00B44AB4, 0x48114CE6 ] # ba     0x114CA4 + 0x40\n- [ be32, 0x00B44AB8, 0x60000000 ] # nop"));
            cbList.Items.Add(new ListItem("p5_FileAccessLog by TGEnigma (File Access Log) <br><span class=\"desc\">" +
                "Prints file paths to the console's TTY Log as they are accessed.</span>", "p5_FileAccessLog: &p5_FileAccessLog\n" +
                "# branch to trampoline\n- [ be32, 0x00AC0A78, 0x48B44ABF ] # bla 0xB44ABC\n- [ be32, 0x00AC0A7C, 0x60000000 ] # nop\n \n# trampoline\n# prologue\n- [ be32, 0x00B44ABC, 0xF821FF41 ] # stdu    r1, -STACK_SIZE(r1)\n- [ be32, 0x00B44AC0, 0x7C0802A6 ] # mflr    r0\n- [ be32, 0x00B44AC4, 0xF80100D0 ] # std     r0, STACK_SIZE + 0x10(r1)\n   \n# save volatile regs\n- [ be32, 0x00B44AC8, 0xF86100B8 ] # std     r3, STACK_SIZE - 0x08(r1)\n- [ be32, 0x00B44ACC, 0xF88100B0 ] # std     r4, STACK_SIZE - 0x10(r1)\n- [ be32, 0x00B44AD0, 0xF8A100A8 ] # std     r5, STACK_SIZE - 0x18(r1)\n- [ be32, 0x00B44AD4, 0xF8C100A0 ] # std     r6, STACK_SIZE - 0x20(r1)\n- [ be32, 0x00B44AD8, 0xF8E10098 ] # std     r7, STACK_SIZE - 0x28(r1)\n- [ be32, 0x00B44ADC, 0xF9010090 ] # std     r8, STACK_SIZE - 0x30(r1)\n- [ be32, 0x00B44AE0, 0xF9210088 ] # std     r9, STACK_SIZE - 0x38(r1)\n- [ be32, 0x00B44AE4, 0xF9410080 ] # std     r10, STACK_SIZE - 0x40(r1)\n- [ be32, 0x00B44AE8, 0xF9610078 ] # std     r11, STACK_SIZE - 0x48(r1)\n- [ be32, 0x00B44AEC, 0xF9810070 ] # std     r12, STACK_SIZE - 0x50(r1)\n   \n# print file name\n- [ be32, 0x00B44AF0, 0x80630004 ] # lwz     r3, 0x04(r3)\n- [ be32, 0x00B44AF4, 0x7C6307B4 ] # extsw   r3, r3\n- [ be32, 0x00B44AF8, 0x48AD546F ] # bla     PTR_PRINTF\n- [ be32, 0x00B44AFC, 0x60000000 ] # nop\n   \n# print newline\n- [ be32, 0x00B44B00, 0x3C6000B9 ] # lis    r3, PTR_NEWLINECHAR@ha\n- [ be32, 0x00B44B04, 0x30631820 ] # addic  r3, r3, PTR_NEWLINECHAR@l    \n- [ be32, 0x00B44B08, 0x48AD546F ] # bla    PTR_PRINTF\n- [ be32, 0x00B44B0C, 0x60000000 ] # nop\n   \n# restore volatile regs\n- [ be32, 0x00B44B10, 0xE86100B8 ] # ld     r3, STACK_SIZE - 0x08(r1)\n- [ be32, 0x00B44B14, 0xE88100B0 ] # ld     r4, STACK_SIZE - 0x10(r1)\n- [ be32, 0x00B44B18, 0xE8A100A8 ] # ld     r5, STACK_SIZE - 0x18(r1)\n- [ be32, 0x00B44B1C, 0xE8C100A0 ] # ld     r6, STACK_SIZE - 0x20(r1)\n- [ be32, 0x00B44B20, 0xE8E10098 ] # ld     r7, STACK_SIZE - 0x28(r1)\n- [ be32, 0x00B44B24, 0xE9010090 ] # ld     r8, STACK_SIZE - 0x30(r1)\n- [ be32, 0x00B44B28, 0xE9210088 ] # ld     r9, STACK_SIZE - 0x38(r1)\n- [ be32, 0x00B44B2C, 0xE9410080 ] # ld     r10, STACK_SIZE - 0x40(r1)\n- [ be32, 0x00B44B30, 0xE9610078 ] # ld     r11, STACK_SIZE - 0x48(r1)\n- [ be32, 0x00B44B34, 0xE9810070 ] # ld     r12, STACK_SIZE - 0x50(r1)\n   \n# destroy stack frame\n- [ be32, 0x00B44B38, 0xE80100D0 ] # ld     r0, STACK_SIZE + 0x10(r1)\n- [ be32, 0x00B44B3C, 0x7C0803A6 ] # mtlr   r0    \n- [ be32, 0x00B44B40, 0x382100C0 ] # addi   r1, r1, STACK_SIZE\n   \n# return\n- [ be32, 0x00B44B44, 0xFB2100F8 ] # std    r25, 0xF8(r1)\n- [ be32, 0x00B44B48, 0xFAA100D8 ] # std    r21, 0xD8(r1)\n- [ be32, 0x00B44B4C, 0x4E800020 ] # blr"));
            cbList.Items.Add(new ListItem("p5_FixScriptPrintingFunctions by TGEnigma (Fix Script Printing Functions) <br><span class=\"desc\">" +
                "Allows flowscripts to print strings to TTY Log.</span>", "p5_FixScriptPrintingFunctions: &p5_FixScriptPrintingFunctions\n" +
                "#ScriptInterpreter_Comm_PUT_Hook\n- [ be32, 0x001E9D10, 0x48B44B9A ]\n\n#PutInt\n- [ be32, 0x00B44B98, 0x7C641B78 ]\n- [ be32, 0x00B44B9C, 0x3C6000B6 ]\n- [ be32, 0x00B44BA0, 0x3063394C ]\n- [ be32, 0x00B44BA4, 0x48AD546F ]\n- [ be32, 0x00B44BA8, 0x3C6000B9 ]\n- [ be32, 0x00B44BAC, 0x30631820 ]\n- [ be32, 0x00B44BB0, 0x48AD546F ]\n- [ be32, 0x00B44BB4, 0x481E9D16 ]\n\n#ScriptInterpreter_Comm_PUTF_Hook\n- [ be32, 0x001E9D68, 0x48B44BBA ]\n   \n#PutFloat\n- [ be32, 0xB44BB8, 0xFC400890 ]\n- [ be32, 0xB44BBC, 0x3C6000B6 ]\n- [ be32, 0xB44BC0, 0x3063397C ]\n- [ be32, 0xB44BC4, 0x48AD546F ]\n- [ be32, 0xB44BC8, 0x3C6000B9 ]\n- [ be32, 0xB44BCC, 0x30631820 ]\n- [ be32, 0xB44BD0, 0x48AD546F ]\n- [ be32, 0xB44BD4, 0x481E9D6E ]\n\n#ScriptInterpreter_Comm_PUTS_Hook\n- [ be32, 0x001E9D3C, 0x48B44BDA ]\n\n#PutString\n- [ be32, 0x00B44BD8, 0x7C641B78 ]\n- [ be32, 0x00B44BDC, 0x3C6000B6 ]\n- [ be32, 0x00B44BE0, 0x30633994 ]\n- [ be32, 0x00B44BE4, 0x48AD546F ]\n- [ be32, 0x00B44BE8, 0x3C6000B9 ]\n- [ be32, 0x00B44BEC, 0x30631820 ]\n- [ be32, 0x00B44BF0, 0x48AD546F ]\n- [ be32, 0x00B44BF4, 0x481E9D42 ]"));
            cbList.Items.Add(new ListItem("p5_SkipIntro by TGEnigma (Skip Intro Videos) <br><span class=\"desc\">" +
                "</span>", "p5_SkipIntro: &p5_SkipIntro\n- [ be32, 0x0055AC8C, 0x60000000 ]"));
            cbList.Items.Add(new ListItem("p5_CommunityPatches by DeathChaos (P5 Modding Community Patches 1.4) <br><span class=\"desc\">" +
                "A collection of QoL patches to help make some game mods possible.</span>",
                "p5_CommunityPatches: &p5_CommunityPatches\n" +
                "# Force Single GAP Combat Animations\n- [ be32, 0x723630, 0x428000ac ]\n# Expand DLC Outfit BGM List\n# Skip DLC Check for new outfits\n- [ be32, 0x0019b830, 0x60000000 ]\n- [ be32, 0x0019b83c, 0x60000000 ]\n# Patch table to redirect to new one\n- [ be32, 0x06cd00, 0x3fe000b4 ] # lis r31, 0xb4\n- [ be32, 0x06cd0c, 0x33ff4bf8 ] # addic r31, r31, 0x4bf8\n# Patch table size to new size 0x15\n- [ be32, 0x06cd5c, 0x2c1e0015 ] # cmpwi r30, 0x15\n# expand the table\n# Default BGM\n- [ be32, 0xB44BF8, 0x0000FFFF ]\n- [ be32, 0xB44BFC, 0x00000000 ]\n# bgm_01\n- [ be16, 0xB44C00, 0x0001 ]\n- [ be16, 0xB44C02, 0x7053 ]\n- [ be16, 0xB44C04, 0x0000 ]\n- [ be16, 0xB44C06, 0x2290 ]\n# bgm_02\n- [ be16, 0xB44C08, 0x0002 ]\n- [ be16, 0xB44C0A, 0x704A ]\n- [ be16, 0xB44C0C, 0x0000 ]\n- [ be16, 0xB44C0E, 0x2291 ]\n# bgm_03\n- [ be16, 0xB44C10, 0x0003 ]\n- [ be16, 0xB44C12, 0x7065 ]\n- [ be16, 0xB44C14, 0x0000 ]\n- [ be16, 0xB44C16, 0x2292 ]\n# bgm_04\n- [ be16, 0xB44C18, 0x0004 ]\n- [ be16, 0xB44C1A, 0x705C ]\n- [ be16, 0xB44C1C, 0x0000 ]\n- [ be16, 0xB44C1E, 0x2293 ]\n# bgm_05\n- [ be16, 0xB44C20, 0x0005 ]\n- [ be16, 0xB44C22, 0x7077 ]\n- [ be16, 0xB44C24, 0x0000 ]\n- [ be16, 0xB44C26, 0x2294 ]\n# bgm_06\n- [ be16, 0xB44C28, 0x0006 ]\n- [ be16, 0xB44C2A, 0x7092 ]\n- [ be16, 0xB44C2C, 0x0000 ]\n- [ be16, 0xB44C2E, 0x2295 ]\n# bgm_07\n- [ be16, 0xB44C30, 0x0007 ]\n- [ be16, 0xB44C32, 0x709b ]\n- [ be16, 0xB44C34, 0x0000 ]\n- [ be16, 0xB44C36, 0x2296 ]\n# bgm_08\n- [ be16, 0xB44C38, 0x0008 ]\n- [ be16, 0xB44C3A, 0x70a4 ]\n- [ be16, 0xB44C3C, 0x0000 ]\n- [ be16, 0xB44C3E, 0x2297 ]\n# bgm_09\n- [ be16, 0xB44C40, 0x0009 ]\n- [ be16, 0xB44C42, 0x70ad ]\n- [ be16, 0xB44C44, 0x0000 ]\n- [ be16, 0xB44C46, 0x2298 ]\n# bgm_10 - Original List ends here\n- [ be16, 0xB44C48, 0x000A ]\n- [ be16, 0xB44C4A, 0x706e ]\n- [ be16, 0xB44C4C, 0x0000 ]\n- [ be16, 0xB44C4E, 0x2299 ]\n# bgm_11 - Starlight (c0001_170_00.GMD)\n- [ be16, 0xB44C50, 0x000B ]\n- [ be16, 0xB44C52, 0x70b6 ]\n- [ be16, 0xB44C54, 0x0000 ]\n- [ be16, 0xB44C56, 0x229A ]\n# bgm_12 - Midwinter Uniform (c0001_171_00.GMD)\n- [ be16, 0xB44C58, 0x000C ]\n- [ be16, 0xB44C5A, 0x70bf ]\n- [ be16, 0xB44C5C, 0x0000 ]\n- [ be16, 0xB44C5E, 0x229B ]\n# bgm_13 - Midwinter Casual (c0001_172_00.GMD)\n- [ be16, 0xB44C60, 0x000D ]\n- [ be16, 0xB44C62, 0x70c8 ]\n- [ be16, 0xB44C64, 0x0000 ]\n- [ be16, 0xB44C66, 0x229C ]\n# bgm_14 - Featherman (c0001_173_00.GMD)\n- [ be16, 0xB44C68, 0x000E ]\n- [ be16, 0xB44C6A, 0x70d1 ]\n- [ be16, 0xB44C6C, 0x0000 ]\n- [ be16, 0xB44C6E, 0x229D ]\n# bgm_15 - Summer Break (P5S) (c0001_174_00.GMD)\n- [ be16, 0xB44C70, 0x000F ]\n- [ be16, 0xB44C72, 0x70da ]\n- [ be16, 0xB44C74, 0x0000 ]\n- [ be16, 0xB44C76, 0x229E ]\n# bgm_16 - Deminica Suit (No Helmet) (c0001_175_00.GMD)\n- [ be16, 0xB44C78, 0x0010 ]\n- [ be16, 0xB44C7A, 0x70e3 ]\n- [ be16, 0xB44C7C, 0x0000 ]\n- [ be16, 0xB44C7E, 0x229F ]\n# bgm_17 - New Cinema (c0001_176_00.GMD)\n- [ be16, 0xB44C80, 0x0011 ]\n- [ be16, 0xB44C82, 0x70ec ]\n- [ be16, 0xB44C84, 0x0000 ]\n- [ be16, 0xB44C86, 0x22A0 ]\n# bgm_18 - Ultramarine (Velvet Room) (c0001_177_00.GMD)\n- [ be16, 0xB44C88, 0x0012 ]\n- [ be16, 0xB44C8A, 0x70f5 ]\n- [ be16, 0xB44C8C, 0x0000 ]\n- [ be16, 0xB44C8E, 0x22A1 ]\n# bgm_19 - RESERVE (c0001_178_00.GMD)\n- [ be16, 0xB44C90, 0x0013 ]\n- [ be16, 0xB44C92, 0x70fe ]\n- [ be16, 0xB44C94, 0x0000 ]\n- [ be16, 0xB44C96, 0x22A2 ]\n# bgm_20 - RESERVE (c0001_179_00.GMD)\n- [ be16, 0xB44C98, 0x0014 ]\n- [ be16, 0xB44C9A, 0x7107 ]\n- [ be16, 0xB44C9C, 0x0000 ]\n- [ be16, 0xB44C9E, 0x22A3 ]\n# Disable Player Swordtrack loading\n- [ be32, 0x00265cc, 0x38600000 ] # li   param_1,0x0\n# DLC\n- [ be32, 0x0019b830, 0x60000000 ]\n- [ be32, 0x0019b83c, 0x60000000 ]\n# Increase red menu bg size\n- [ bef32,0x4c1400, 2.00000000 ]\n- [ bef32,0x4c4d9c, 2.00000000 ]\n- [ be32, 0x4c4cd8, 0x60000000 ]"));
            cbList.Items.Add(new ListItem("p5_60FPS_PatVer by TGEnigma (60 FPS) <br><span class=\"desc\">" +
                "Patch may accelerate some game effects by 2x. Causes game progress breaking in some places. Updated patch fixes subtitle cut-off in cutscenes.</span>",
                "p5_60FPS_PatVer: &p5_60FPS_PatVer\n" +
                "- [ be32, 0x00010268, 0x9061009C ] # set update rate to 60 -> r3, 0xE0+var_44(r1)\n- [ be32, 0x008FC864, 0x60000000 ] # nop cellGcmSetSecondVFrequency\n- [ bef32, 0x00012484, 0.01666667 ]\n- [ bef32, 0x00045678, 0.01666667 ]\n- [ bef32, 0x000616F0, 0.01666667 ]\n- [ bef32, 0x00073F20, 0.01666667 ]\n#- [ bef32, 0x000753A0, 0.01666667 ] # Doubles camera speed\n- [ bef32, 0x00077E54, 0.01666667 ]\n- [ bef32, 0x00078A70, 0.01666667 ]\n- [ bef32, 0x0007A238, 0.01666667 ]\n- [ bef32, 0x00081864, 0.01666667 ]\n- [ bef32, 0x000885C8, 0.01666667 ]\n- [ bef32, 0x0008C550, 0.01666667 ]\n- [ bef32, 0x0008D6D0, 0.01666667 ]\n- [ bef32, 0x000D058C, 0.01666667 ]\n- [ bef32, 0x000D0B4C, 0.01666667 ]\n- [ bef32, 0x000E4754, 0.01666667 ]\n- [ bef32, 0x000E50F0, 0.01666667 ]\n#- [ bef32, 0x000E8190, 0.01666667 ] # Breaks crumpled paper animation\n- [ bef32, 0x000F8B78, 0.01666667 ]\n- [ bef32, 0x00101CE8, 0.01666667 ]\n- [ bef32, 0x001E7344, 0.01666667 ]\n- [ bef32, 0x001EB0D4, 0.01666667 ]\n- [ bef32, 0x001EB328, 0.01666667 ]\n- [ bef32, 0x001EB814, 0.01666667 ]\n- [ bef32, 0x001EB940, 0.01666667 ]\n- [ bef32, 0x001EBA04, 0.01666667 ]\n- [ bef32, 0x001EBBA0, 0.01666667 ]\n- [ bef32, 0x001EBCD0, 0.01666667 ]\n- [ bef32, 0x001ECCA0, 0.01666667 ]\n- [ bef32, 0x00234C64, 0.01666667 ]\n- [ bef32, 0x0023F4BC, 0.01666667 ]\n- [ bef32, 0x002400BC, 0.01666667 ]\n- [ bef32, 0x00240BB0, 0.01666667 ]\n- [ bef32, 0x0029231C, 0.01666667 ]\n- [ bef32, 0x00294A70, 0.01666667 ]\n- [ bef32, 0x002952F8, 0.01666667 ]\n#- [ bef32, 0x002B027C, 0.01666667 ] # Makes it impossible to run < 60FPS\n- [ bef32, 0x002B0688, 0.01666667 ]\n- [ bef32, 0x002B6154, 0.01666667 ]\n- [ bef32, 0x002B71F8, 0.01666667 ]\n- [ bef32, 0x002B82C8, 0.01666667 ]\n- [ bef32, 0x002B98F8, 0.01666667 ]\n- [ bef32, 0x002B9F8C, 0.01666667 ]\n- [ bef32, 0x002BA614, 0.01666667 ]\n- [ bef32, 0x002BC84C, 0.01666667 ]\n- [ bef32, 0x002BCD2C, 0.01666667 ]\n- [ bef32, 0x002C550C, 0.01666667 ]\n- [ bef32, 0x002D1328, 0.01666667 ]\n#- [ bef32, 0x002D230C, 0.01666667 ] # Doubles movement speed\n- [ bef32, 0x002D2DDC, 0.01666667 ]\n- [ bef32, 0x002D8A10, 0.01666667 ]\n- [ bef32, 0x002D8A18, 0.01666667 ]\n- [ bef32, 0x002DA46C, 0.01666667 ]\n- [ bef32, 0x002FBB00, 0.01666667 ]\n- [ bef32, 0x0030E258, 0.01666667 ]\n- [ bef32, 0x003181D4, 0.01666667 ]\n- [ bef32, 0x0031CE24, 0.01666667 ]\n- [ bef32, 0x0031DBE0, 0.01666667 ]\n- [ bef32, 0x0033DBD0, 0.01666667 ]\n- [ bef32, 0x00358664, 0.01666667 ]\n- [ bef32, 0x00359020, 0.01666667 ]\n- [ bef32, 0x0035AD10, 0.01666667 ]\n- [ bef32, 0x00364A98, 0.01666667 ]\n- [ bef32, 0x0037429C, 0.01666667 ]\n- [ bef32, 0x00376E7C, 0.01666667 ]\n- [ bef32, 0x00379B08, 0.01666667 ]\n- [ bef32, 0x0037AAAC, 0.01666667 ]\n- [ bef32, 0x0037CF54, 0.01666667 ]\n- [ bef32, 0x0037DB7C, 0.01666667 ]\n- [ bef32, 0x003803F4, 0.01666667 ]\n- [ bef32, 0x00387A80, 0.01666667 ]\n- [ bef32, 0x00388684, 0.01666667 ]\n#- [ bef32, 0x003ACBC0, 0.01666667 ] # kaleidoscope speedup\n- [ bef32, 0x003BDDD0, 0.01666667 ]\n- [ bef32, 0x003E944C, 0.01666667 ]\n- [ bef32, 0x003F35EC, 0.01666667 ]\n- [ bef32, 0x003F6FF4, 0.01666667 ]\n- [ bef32, 0x0058CE18, 0.01666667 ]\n- [ bef32, 0x0058DE64, 0.01666667 ]\n- [ bef32, 0x0058E82C, 0.01666667 ]\n- [ bef32, 0x0058E958, 0.01666667 ]\n- [ bef32, 0x0058F47C, 0.01666667 ]\n- [ bef32, 0x0058FA00, 0.01666667 ]\n- [ bef32, 0x0058FAB4, 0.01666667 ]\n- [ bef32, 0x0058FBE4, 0.01666667 ]\n- [ bef32, 0x0058FD2C, 0.01666667 ]\n- [ bef32, 0x0058FE6C, 0.01666667 ]\n- [ bef32, 0x00590A04, 0.01666667 ]\n- [ bef32, 0x005B6914, 0.01666667 ]\n- [ bef32, 0x005F1C6C, 0.01666667 ]\n- [ bef32, 0x0062076C, 0.01666667 ] # battle related stuff\n- [ bef32, 0x007072BC, 0.01666667 ]\n- [ bef32, 0x00722D7C, 0.01666667 ]\n- [ bef32, 0x0073C840, 0.01666667 ]\n- [ bef32, 0x00772E50, 0.01666667 ]\n- [ bef32, 0x0087B338, 0.01666667 ]\n- [ bef32, 0x00B10110, 0.01666667 ]\n- [ bef32, 0x00B6AA14, 0.01666667 ]\n- [ bef32, 0x00B6AA38, 0.01666667 ]\n- [ bef32, 0x00B70B48, 0.01666667 ]\n- [ bef32, 0x00B70BC8, 0.01666667 ]\n- [ bef32, 0x00B71CF4, 0.01666667 ]\n- [ bef32, 0x00B72F38, 0.01666667 ]\n- [ bef32, 0x00CFF46C, 0.01666667 ]\n- [ bef32, 0x00061700, 0.1666667 ]\n- [ bef32, 0x00069AA4, 0.1666667 ]\n- [ bef32, 0x0007A1EC, 0.1666667 ]\n- [ bef32, 0x00081880, 0.1666667 ]\n- [ bef32, 0x000C8258, 0.1666667 ]\n- [ bef32, 0x000C991C, 0.1666667 ]\n- [ bef32, 0x00101CCC, 0.1666667 ]\n- [ bef32, 0x001E2C44, 0.1666667 ]\n- [ bef32, 0x001E61E8, 0.1666667 ]\n- [ bef32, 0x001E7338, 0.1666667 ]\n- [ bef32, 0x00250C50, 0.1666667 ]\n- [ bef32, 0x00256B20, 0.1666667 ]\n- [ bef32, 0x00292100, 0.1666667 ]\n- [ bef32, 0x00294A60, 0.1666667 ]\n- [ bef32, 0x002952E4, 0.1666667 ]\n- [ bef32, 0x0029FD98, 0.1666667 ]\n- [ bef32, 0x002A1BB8, 0.1666667 ]\n- [ bef32, 0x002A41D0, 0.1666667 ]\n- [ bef32, 0x002A6124, 0.1666667 ]\n- [ bef32, 0x002B4FF0, 0.1666667 ]\n- [ bef32, 0x002B60DC, 0.1666667 ]\n- [ bef32, 0x002B7174, 0.1666667 ]\n- [ bef32, 0x002B82F4, 0.1666667 ]\n- [ bef32, 0x002B8E74, 0.1666667 ]\n- [ bef32, 0x002BA600, 0.1666667 ]\n- [ bef32, 0x002BAB30, 0.1666667 ]\n- [ bef32, 0x002BB4E0, 0.1666667 ]\n- [ bef32, 0x002BB808, 0.1666667 ]\n- [ bef32, 0x002BC368, 0.1666667 ]\n- [ bef32, 0x002BC844, 0.1666667 ]\n- [ bef32, 0x002BD414, 0.1666667 ]\n- [ bef32, 0x002C4F54, 0.1666667 ]\n- [ bef32, 0x002C4FF0, 0.1666667 ]\n- [ bef32, 0x002C69E4, 0.1666667 ]\n- [ bef32, 0x002D4378, 0.1666667 ]\n- [ bef32, 0x002DD968, 0.1666667 ]\n- [ bef32, 0x002DE538, 0.1666667 ]\n- [ bef32, 0x002DEA04, 0.1666667 ]\n- [ bef32, 0x0030D7A0, 0.1666667 ]\n- [ bef32, 0x0030E6BC, 0.1666667 ]\n- [ bef32, 0x003181B8, 0.1666667 ]\n- [ bef32, 0x0031AFE0, 0.1666667 ]\n- [ bef32, 0x0031CE38, 0.1666667 ]\n- [ bef32, 0x0031DBF0, 0.1666667 ]\n- [ bef32, 0x0031EC74, 0.1666667 ]\n- [ bef32, 0x00322FB4, 0.1666667 ]\n- [ bef32, 0x00356560, 0.1666667 ]\n- [ bef32, 0x003586BC, 0.1666667 ]\n- [ bef32, 0x00358F90, 0.1666667 ]\n- [ bef32, 0x0035A380, 0.1666667 ]\n- [ bef32, 0x0035AA3C, 0.1666667 ]\n- [ bef32, 0x00364A9C, 0.1666667 ]\n- [ bef32, 0x003688C8, 0.1666667 ]\n- [ bef32, 0x00368A88, 0.1666667 ]\n- [ bef32, 0x00368E30, 0.1666667 ]\n- [ bef32, 0x00376FD0, 0.1666667 ]\n- [ bef32, 0x00377538, 0.1666667 ]\n- [ bef32, 0x00377CD8, 0.1666667 ]\n- [ bef32, 0x0037C2B0, 0.1666667 ]\n- [ bef32, 0x0037D310, 0.1666667 ]\n- [ bef32, 0x0037D418, 0.1666667 ]\n- [ bef32, 0x0037D5B4, 0.1666667 ]\n- [ bef32, 0x0037DD08, 0.1666667 ]\n- [ bef32, 0x0037DE10, 0.1666667 ]\n- [ bef32, 0x0037DF78, 0.1666667 ]\n- [ bef32, 0x00382F38, 0.1666667 ]\n- [ bef32, 0x003845F0, 0.1666667 ]\n- [ bef32, 0x00387A6C, 0.1666667 ]\n- [ bef32, 0x00398208, 0.1666667 ]\n- [ bef32, 0x00398460, 0.1666667 ]\n- [ bef32, 0x003999F8, 0.1666667 ]\n- [ bef32, 0x003A7C64, 0.1666667 ]\n- [ bef32, 0x003AA418, 0.1666667 ]\n- [ bef32, 0x003AE0E4, 0.1666667 ]\n- [ bef32, 0x003AE3A0, 0.1666667 ]\n- [ bef32, 0x003B25D8, 0.1666667 ]\n- [ bef32, 0x003BC448, 0.1666667 ]\n- [ bef32, 0x003C58C0, 0.1666667 ]\n- [ bef32, 0x003C67B0, 0.1666667 ]\n- [ bef32, 0x003C6D6C, 0.1666667 ]\n- [ bef32, 0x003EBC20, 0.1666667 ]\n- [ bef32, 0x003EE5F0, 0.1666667 ]\n- [ bef32, 0x003F1FE0, 0.1666667 ]\n- [ bef32, 0x003F6FC0, 0.1666667 ]\n- [ bef32, 0x004EB808, 0.1666667 ]\n- [ bef32, 0x0055251C, 0.1666667 ]\n- [ bef32, 0x0055EC48, 0.1666667 ]\n- [ bef32, 0x0055F4A8, 0.1666667 ]\n- [ bef32, 0x0057DC08, 0.1666667 ]\n- [ bef32, 0x0057E498, 0.1666667 ]\n- [ bef32, 0x005C5364, 0.1666667 ]\n- [ bef32, 0x00620714, 0.1666667 ]\n- [ bef32, 0x00635CB4, 0.1666667 ]\n- [ bef32, 0x00642B98, 0.1666667 ]\n- [ bef32, 0x00654EE8, 0.1666667 ]\n- [ bef32, 0x00662B04, 0.1666667 ]\n- [ bef32, 0x006AFF98, 0.1666667 ]\n- [ bef32, 0x006CAA44, 0.1666667 ]\n- [ bef32, 0x006E0224, 0.1666667 ]\n- [ bef32, 0x006E31A0, 0.1666667 ]\n- [ bef32, 0x006FCD3C, 0.1666667 ]\n- [ bef32, 0x00772E54, 0.1666667 ]\n- [ bef32, 0x00797508, 0.1666667 ]\n- [ bef32, 0x00B52E3C, 0.1666667 ]\n- [ bef32, 0x00B6AD00, 0.1666667 ]\n- [ bef32, 0x00B6B71C, 0.1666667 ]\n- [ bef32, 0x00B6E478, 0.1666667 ]\n- [ bef32, 0x00B6E880, 0.1666667 ]\n- [ bef32, 0x00B6E8B8, 0.1666667 ]\n- [ bef32, 0x00B6E8F0, 0.1666667 ]\n- [ bef32, 0x00B6E928, 0.1666667 ]\n- [ bef32, 0x00B6E960, 0.1666667 ]\n- [ bef32, 0x00B6E998, 0.1666667 ]\n- [ bef32, 0x00B6E9D0, 0.1666667 ]\n- [ bef32, 0x00B6EA08, 0.1666667 ]\n- [ bef32, 0x00B6EA40, 0.1666667 ]\n- [ bef32, 0x00B6EA78, 0.1666667 ]\n- [ bef32, 0x00B6EAB0, 0.1666667 ]\n- [ bef32, 0x00B6EAE8, 0.1666667 ]\n- [ bef32, 0x00B6EB20, 0.1666667 ]\n- [ bef32, 0x00B6EB58, 0.1666667 ]\n- [ bef32, 0x00B6EB90, 0.1666667 ]\n- [ bef32, 0x00B6EBC8, 0.1666667 ]\n- [ bef32, 0x00B6EC00, 0.1666667 ]\n- [ bef32, 0x00B6EC38, 0.1666667 ]\n- [ bef32, 0x00B6EC70, 0.1666667 ]\n- [ bef32, 0x00B6ECA8, 0.1666667 ]\n- [ bef32, 0x00B70A54, 0.1666667 ]\n- [ bef32, 0x00B70AF0, 0.1666667 ]\n- [ bef32, 0x00B70AF8, 0.1666667 ]\n- [ bef32, 0x00B70B00, 0.1666667 ]\n- [ bef32, 0x00B70B08, 0.1666667 ]\n- [ bef32, 0x00B70B10, 0.1666667 ]\n- [ bef32, 0x00B70B20, 0.1666667 ]\n- [ bef32, 0x00B70B78, 0.1666667 ]\n- [ bef32, 0x00B70B88, 0.1666667 ]\n- [ bef32, 0x00B70BB4, 0.1666667 ]\n- [ bef32, 0x00B70BC4, 0.1666667 ]\n- [ bef32, 0x00B70F60, 0.1666667 ]\n- [ bef32, 0x00B71BAC, 0.1666667 ]\n- [ bef32, 0x00B71BBC, 0.1666667 ]\n- [ bef32, 0x00B9BD30, 0.1666667 ]\n- [ bef32, 0x00CF96AC, 0.1666667 ]\n- [ bef32, 0x00CFA1E8, 0.1666667 ]\n- [ bef32, 0x00CFA20C, 0.1666667 ]\n- [ bef32, 0x00CFB210, 0.1666667 ]\n- [ bef32, 0x00CFB778, 0.1666667 ]\n- [ bef32, 0x00CFBC30, 0.1666667 ]\n- [ bef32, 0x00CFBCA8, 0.1666667 ]\n- [ bef32, 0x00CFBFD4, 0.1666667 ]\n- [ bef32, 0x00CFC0A8, 0.1666667 ]\n- [ bef32, 0x00CFF3CC, 0.1666667 ]\n- [ bef32, 0x00CFF3D4, 0.1666667 ]\n- [ bef32, 0x00CFF470, 0.1666667 ]\n- [ bef32, 0x00CFF478, 0.1666667 ]\n- [ bef32, 0x00CFF480, 0.1666667 ]\n- [ bef32, 0x00D06840, 0.1666667 ]\n- [ bef32, 0x00D06848, 0.1666667 ]\n- [ be32, 0x000FB71C, 0x3C603C88 ]\n- [ be32, 0x00109B14, 0x3C603C88 ]\n- [ be32, 0x0023FBDC, 0x3CA03C88 ]\n- [ be32, 0x00240620, 0x3CA03C88 ]\n- [ be32, 0x00241258, 0x3C803C88 ]\n- [ be32, 0x003CA4BC, 0x3C603C88 ]\n- [ be32, 0x0087B448, 0x3C603C88 ]\n#- [ bef32, 0x0009eb60, 0.01666667 ]\n#- [ bef32, 0x002cb9e8, 0.01666667 ]\n#- [ bef32, 0x00331FF0, 0.1666667 ]\n#- [ bef32, 0x003B0520, 0.1666667 ]\n#- [ bef32, 0x003B05E8, 0.1666667 ]\n#- [ bef32, 0x003b25cc, 0.1666667 ]\n#- [ bef32, 0x003BC478, 0.1666667 ]\n#- [ be32, 0x000a7e6c, 0x3d803c88 ]\n- [ be32, 0x0026dca0, 0x3860001e ] # batting cages\n- [ be32, 0x0026de4c, 0x3860001e ]\n- [ be32, 0x0026e36c, 0x3860001e ]\n- [ be32, 0x0026fb10, 0x3860001e ]\n- [ be32, 0x0026fb3c, 0x3860001e ]\n- [ be32, 0x0026fb78, 0x3860001e ]\n- [ be32, 0x0026fc30, 0x3860001e ]\n- [ be32, 0x0026fca0, 0x3860001e ]\n- [ be32, 0x0026fd14, 0x3860001e ]\n- [ be32, 0x0026fd50, 0x3860001e ]\n- [ be32, 0x0026fdf4, 0x3860001e ]\n- [ be32, 0x0026fe14, 0x3860001e ]\n- [ be32, 0x0026fe50, 0x3860001e ]\n- [ be32, 0x0026fe9c, 0x3860001e ]\n- [ be32, 0x0026fedc, 0x3860001e ]\n- [ be32, 0x002700e4, 0x3860001e ]\n- [ be32, 0x00270304, 0x3860001e ]\n- [ be32, 0x00288b04, 0x3860001e ] # party panel\n- [ be32, 0x00288b4c, 0x3860001e ]\n- [ be32, 0x00288b70, 0x3860001e ]\n- [ be32, 0x00288bb0, 0x3860001e ]\n- [ be32, 0x00288bdc, 0x3860001e ]\n- [ be32, 0x00288c18, 0x3860001e ]\n- [ be32, 0x00288c3c, 0x3860001e ]\n- [ be32, 0x002892f0, 0x3860001e ]\n- [ be32, 0x0028931c, 0x3860001e ]\n- [ be32, 0x00289344, 0x3860001e ]\n- [ be32, 0x0028b324, 0x3860001e ]\n- [ be32, 0x0028b4c8, 0x3860001e ]\n- [ be32, 0x0028c1a0, 0x3860001e ]\n- [ be32, 0x0028c1cc, 0x3860001e ]\n- [ be32, 0x0028c1f4, 0x3860001e ]\n- [ be32, 0x0028ea90, 0x3860001e ]\n- [ be32, 0x0028eacc, 0x3860001e ]\n- [ be32, 0x0028eafc, 0x3860001e ]\n- [ be32, 0x0028eb3c, 0x3860001e ]\n- [ be32, 0x0028eb60, 0x3860001e ]\n- [ be32, 0x001cfe60, 0x3860001e ] # blink anim\n# Removes framerate dependency for both script interpreters\n- [ be32, 0xb44e00, 0x38600001 ]# li r3,0x1\n- [ be32, 0xb44e04, 0x38dd0170 ]# addi r6,r29,0x170\n- [ be32, 0xb44e08, 0x48b44e2f ]# bla0xb44e2c\n- [ be32, 0xb44e0c, 0x2c040000 ]# cmpwir4,0x0\n- [ be32, 0xb44e10, 0x40820008 ]# bne+0x8\n- [ be32, 0xb44e14, 0x481f263a ]# ba 0x1f2638\n- [ be32, 0xb44e18, 0x7c844014 ]# addc r4,r4,r8\n- [ be32, 0xb44e1c, 0x7ca54014 ]# addc r5,r5,r8\n- [ be32, 0xb44e20, 0x481f2642 ]# ba 0x1f2640\n- [ be32, 0xb44e24, 0x3cc000d9 ]# lisr6,0xd9\n- [ be32, 0xb44e28, 0x60c6c6ec ]# orir6,r6,0xc6ec\n- [ be32, 0xb44e2c, 0x3ce000ff ]# lisr7,0xff\n- [ be32, 0xb44e30, 0x80e7fb50 ]# lwzr7,-0x4b0(r7)\n- [ be32, 0xb44e34, 0x81060000 ]# lwzr8,0(r6)\n- [ be32, 0xb44e38, 0x90e60000 ]# stwr7,0(r6)\n- [ be32, 0xb44e3c, 0x7d083850 ]# subf r8,r8,r7\n- [ be32, 0xb44e40, 0x7d09fe70 ]# srawir9,r8,0x1f\n- [ be32, 0xb44e44, 0x7d084850 ]# subf r8,r8,r9\n- [ be32, 0xb44e48, 0x55080ffe ]# rlwinm r8,r8,0x1,0x1f,0x1f\n- [ be32, 0xb44e4c, 0x5509103a ]# rlwinm r9,r8,0x2,0x0,0x1d\n- [ be32, 0xb44e50, 0x4e800020 ]# blr\n- [ be32, 0x1f161c, 0x38600174 ]# li r3,0x174\n- [ be32, 0x1f1640, 0x38800174 ]# li r4,0x174\n- [ be32, 0x1f2634, 0x48b44e02 ]# ba 0xb44e00\n- [ be32, 0x575fb4, 0x48b44e27 ]# bla0xb44e24\n- [ be32, 0x576010, 0x48b44e27 ]# bla0xb44e24\n- [ be32, 0x576020, 0x7c892010 ]# subfcr4,r9,r4\n- [ be32, 0x57602c, 0x7c882010 ]# subfcr4,r8,r4\n- [ be32, 0x575fc4, 0x7c892010 ]# subfcr4,r9,r4\n- [ be32, 0x575fe0, 0x7c681810 ]# subfcr3,r8,r3"));
            cbList.Items.Add(new ListItem("p5_4K by rexis (4K Mod) <br><span class=\"desc\">" +
                "To be used only with 4K Bustup Mod by rexis.</span>", "p5_4K: &p5_4K\n" +
                "- [ be32, 0x5748f8, 0x48b44f93 ]  # font\n- [ be32, 0x56ead4, 0x38600020 ]\n- [ be32, 0x56ead8, 0x4e800020 ]\n- [ be32, 0x56e6e8, 0x38800020 ]\n- [ be32, 0x56e724, 0x39000020 ]\n- [ be32, 0x56e72c, 0x38600020 ]\n \n- [ be32, 0x1cffb0, 0x48b45007 ]  # bustups\n- [ be32, 0x1d027C, 0x48b45007 ]\n- [ be32, 0x1d039C, 0x48b45007 ]\n- [ be32, 0x1cffd4, 0x48b45007 ]\n- [ be32, 0x1d02a0, 0x48b45007 ]\n- [ be32, 0x1d03c0, 0x48b45007 ]\n- [ be32, 0x1db940, 0x48b45007 ]  # navigator portraits\n- [ be32, 0x1db544, 0x48b45007 ]\n- [ be32, 0x1db684, 0x48b45007 ]\n- [ be32, 0x1db978, 0x48b45007 ]\n- [ be32, 0x1db568, 0x48b45007 ]\n- [ be32, 0x1db6a8, 0x48b45007 ]\n- [ be32, 0x5b90f0, 0x48b45007 ]  # cutins\n- [ be32, 0x5b9100, 0x48b45007 ]\n- [ be32, 0x5b9598, 0x48b45007 ]\n- [ be32, 0x5b9634, 0x48b45007 ]\n \n- [ be32, 0x1c4958, 0x481c458a ]  # sprite size\n- [ be32, 0x1c4a08, 0x481c45f2 ]\n- [ be32, 0x1c45bc, 0x80630038 ]\n- [ be32, 0x1c4624, 0x8063003c ]\n- [ be32, 0x43077c, 0x80630038 ]\n- [ be32, 0x430814, 0x8063003c ]\n \n- [ be32, 0x430978, 0x80640028 ]  # sprites\n- [ be32, 0x43097c, 0x80a4003c ]\n- [ be32, 0x430a10, 0x48b44f03 ]\n- [ be32, 0x430a24, 0x60000000 ]\n- [ be32, 0x430d90, 0x80630038 ]  # sprites 2\n- [ be32, 0x430e10, 0x8084003c ]\n- [ be32, 0x0ce18c, 0x48b45007 ]  # minimap\n- [ be32, 0x0ce1b0, 0x48b45007 ]\n- [ be32, 0x3ebd14, 0x48b45007 ]\n- [ be32, 0x3ebd38, 0x48b45007 ]\n- [ be32, 0x4e67f0, 0x48b45007 ]  # hero\n- [ be32, 0x4e6810, 0x48b45007 ]\n- [ be32, 0x245e54, 0x48b45007 ]  # poem\n- [ be32, 0x245e78, 0x48b45007 ]\n- [ be32, 0x240a14, 0x48b45007 ]  # fusion unlocked\n- [ be32, 0x240a3c, 0x48b45007 ]\n- [ be32, 0x0da694, 0x48b45007 ]  # mission title\n- [ be32, 0x0da6c0, 0x48b45007 ]\n- [ be32, 0x0673b0, 0x48b45007 ]  # palace alert lvl\n- [ be32, 0x0673d0, 0x48b45007 ]\n- [ be32, 0x3a753c, 0x48b45007 ]  # place pictures\n- [ be32, 0x3a7570, 0x48b45007 ]\n- [ be32, 0x11bba0, 0x48b45007 ]  # shop\n- [ be32, 0x11bbc4, 0x48b45007 ]\n- [ be32, 0x17c0b4, 0x4842fbe3 ]\n- [ be32, 0x141644, 0x48b45007 ]  # clinic bg\n- [ be32, 0x141674, 0x48b45007 ]\n- [ be32, 0x1416ac, 0x48b45007 ]\n- [ be32, 0x1416dc, 0x48b45007 ]\n- [ be32, 0x1d2a44, 0x48b45007 ]  # inventory icons\n- [ be32, 0x1d2a64, 0x48b45007 ]\n- [ be32, 0x135834, 0x48b45026 ]\n- [ be32, 0x42fc70, 0x48b44ee3 ]  # misc dds\n- [ be32, 0x42fc94, 0x48b44ee3 ]\n- [ be32, 0x42fe64, 0x48b44ed3 ]\n- [ be32, 0x42fe90, 0x48b44ed3 ]\n- [ be32, 0x4c3eac, 0x4811bb13 ]\n- [ be32, 0x1b46e4, 0x4811bb13 ]\n- [ be32, 0x3f6284, 0x48b44f4e ]  # the 'Q'\n- [ bef32,0x43226c,-0.16666666 ]  # persona mask\n- [ bef32,0x432270, 0.16666666 ]\n- [ bef32,0x431a44, 0.16666666 ]  # confidant rotating thing\n- [ bef32,0x4c1400, 3.00000000 ]  # menu red bg (todo)\n- [ bef32,0x4c4d9c, 3.00000000 ]\n- [ be32, 0x4c4cd8, 0x60000000 ]\n- [ be32, 0x8143cc, 0x60000000 ]  # heart (todo)\n- [ be32, 0x8143dc, 0x60000000 ]\n- [ be32, 0x288310, 0x48b44f3f ]  # hb revert tex width\n- [ be32, 0x288320, 0x48b44f47 ]  # hb revert tex height\n- [ be32, 0x2883c8, 0x48b44fa7 ]  # scale to 1/3 patch\n- [ be32, 0x28c160, 0x48b44fb6 ]  # hp bar patch\n- [ be32, 0x28c320, 0x48b44fde ]  # sp bar patch\n \n# common stuff\n- [ be32, 0xb45004, 0x38a00003 ]  # li r5,0x3\n- [ be32, 0xb45008, 0x7c632bd2 ]  # divd   r3,r3,r5\n- [ be32, 0xb4500c, 0x4e800020 ]  # blr\n- [ be32, 0xb45024, 0xf8610018 ]  # stdr3,0x18(r1)\n- [ be32, 0xb45028, 0x63c30000 ]  # orir3,r30,0x0\n- [ be32, 0xb4502c, 0x48b44f3f ]  # bla0xb44f3c\n- [ be32, 0xb45030, 0xffa00890 ]  # fmrf29,f1\n- [ be32, 0xb45034, 0x63c30000 ]  # orir3,r30,0x0\n- [ be32, 0xb45038, 0x48b44f47 ]  # bla0xb44f44\n- [ be32, 0xb4503c, 0xff800890 ]  # fmrf28,f1\n- [ be32, 0xb45040, 0x4813583a ]  # ba 0x135838\n \n- [ be32, 0xb44ed0, 0xa0a100e5 ]  # lhzr5,0xe5(r1)\n- [ be32, 0xb44ed4, 0x2c054c4d ]  # cmpwi  r5,0x4c4d\n- [ be32, 0xb44ed8, 0x40820020 ]  # bne+0x20\n- [ be32, 0xb44edc, 0x4e800020 ]  # blr\n- [ be32, 0xb44ee0, 0xa0a10165 ]  # lhzr5,0x165(r1)\n- [ be32, 0xb44ee4, 0x2c0542fe ]  # cmpwi  r5,0x42fe\n- [ be32, 0xb44ee8, 0x40820014 ]  # bne+0x14\n- [ be32, 0xb44eec, 0xa0a10235 ]  # lhzr5,0x235(r1)\n- [ be32, 0xb44ef0, 0x2c054c4d ]  # cmpwi  r5,0x4c4d\n- [ be32, 0xb44ef4, 0x41820008 ]  # beq+0x8\n- [ be32, 0xb44ef8, 0x48b45006 ]  # ba 0xb45004\n- [ be32, 0xb44efc, 0x4e800020 ]  # blr\n- [ be32, 0xb44f00, 0xc9a10018 ]  # lfdf13,0x18(r1)\n- [ be32, 0xb44f04, 0x81440038 ]  # lwzr10,0x38(r4)\n- [ be32, 0xb44f08, 0xf9410018 ]  # stdr10,0x18(r1)\n- [ be32, 0xb44f0c, 0xc9010018 ]  # lfdf8,0x18(r1)\n- [ be32, 0xb44f10, 0xfd00469c ]  # fcfid  f8,f8\n- [ be32, 0xb44f14, 0x8144002c ]  # lwzr10,0x2c(r4)\n- [ be32, 0xb44f18, 0xf9410018 ]  # stdr10,0x18(r1)\n- [ be32, 0xb44f1c, 0xc8e10018 ]  # lfdf7,0x18(r1)\n- [ be32, 0xb44f20, 0xfce03e9c ]  # fcfid  f7,f7\n- [ be32, 0xb44f24, 0xfd40569c ]  # fcfid  f10,f10\n- [ be32, 0xb44f28, 0x4e800020 ]  # blr\n- [ be32, 0xb44f3c, 0xf821ff81 ]  # stdu   r1,-0x80(r1)\n- [ be32, 0xb44f40, 0x481c495e ]  # ba 0x1c495c\n- [ be32, 0xb44f44, 0xf821ff81 ]  # stdu   r1,-0x80(r1)\n- [ be32, 0xb44f48, 0x481c4a0e ]  # ba 0x1c4a0c  \n- [ be32, 0xb44f4c, 0xfda00890 ]  # fmrf13,f1\n- [ be32, 0xb44f50, 0x807d0010 ]  # lwzr3,0x10(r29)\n- [ be32, 0xb44f54, 0x48b44f3f ]  # bla0xb44f3c\n- [ be32, 0xb44f58, 0xff800890 ]  # fmrf28,f1  \n- [ be32, 0xb44f5c, 0x807d0010 ]  # lwzr3,0x10(r29)\n- [ be32, 0xb44f60, 0x48b44f47 ]  # bla0xb44f44\n- [ be32, 0xb44f64, 0xc37c0010 ]  # lfsf27,0x10(r28)\n- [ be32, 0xb44f68, 0xef7b0072 ]  # fmuls  f27,f27,f1\n- [ be32, 0xb44f6c, 0x807e0004 ]  # lwzr3,0x4(r30)\n- [ be32, 0xb44f70, 0xa0630008 ]  # lhzr3,0x8(r3)\n- [ be32, 0xb44f74, 0xf8610018 ]  # stdr3,0x18(r1)\n- [ be32, 0xb44f78, 0xc8610018 ]  # lfdf3,0x18(r1)\n- [ be32, 0xb44f7c, 0xfc601e9c ]  # fcfid  f3,f3\n- [ be32, 0xb44f80, 0xec7a1824 ]  # fdivs  f3,f26,f3\n- [ be32, 0xb44f84, 0xec4dd82a ]  # fadds  f2,f13,f27\n- [ be32, 0xb44f88, 0xfc206890 ]  # fmrf1,f13\n- [ be32, 0xb44f8c, 0x483f6292 ]  # ba 0x3f6290\n- [ be32, 0xb44f90, 0x3ca00111 ]  # lisr5,0x111\n- [ be32, 0xb44f94, 0x80a5f75c ]  # lwzr5,-0x8a4(r5)\n- [ be32, 0xb44f98, 0xa0850010 ]  # lhzr4,0x10(r5)\n- [ be32, 0xb44f9c, 0xa0a50012 ]  # lhzr5,0x12(r5)\n- [ be32, 0xb44fa0, 0x4e800020 ]  # blr\n \n# healthbars (todo)\n- [ be32, 0xb44fa4, 0x3c803eaa ]  # lisr4,0x3eaa\n- [ be32, 0xb44fa8, 0x90870090 ]  # stwr4,0x90(r7)\n- [ be32, 0xb44fac, 0x90870094 ]  # stwr4,0x94(r7)\n- [ be32, 0xb44fb0, 0x4e800020 ]  # blr\n- [ be32, 0xb44fb4, 0x3c60c30a ]  # lisr3,-0x3e90\n- [ be32, 0xb44fb8, 0x9061008c ]  # stwr3,0x8c(r1)\n- [ be32, 0xb44fbc, 0x3c60c170 ]  # lisr3,-0x3cf6\n- [ be32, 0xb44fc0, 0x90610090 ]  # stwr3,0x90(r1)\n- [ be32, 0xb44fc4, 0x63430000 ]  # orir3,r26,0x0\n- [ be32, 0xb44fc8, 0x62240000 ]  # orir4,r17,0x0\n- [ be32, 0xb44fcc, 0x62a50000 ]  # orir5,r21,0x0\n- [ be32, 0xb44fd0, 0x48288003 ]  # bla0x288000\n- [ be32, 0xb44fd4, 0x3c600029 ]  # lisr3,0x29\n- [ be32, 0xb44fd8, 0x4828c166 ]  # ba 0x28c164\n- [ be32, 0xb44fdc, 0x3c60c2ba ]  # lisr3,-0x3d46\n- [ be32, 0xb44fe0, 0x9061008c ]  # stwr3,0x8c(r1)\n- [ be32, 0xb44fe4, 0x63430000 ]  # orir3,r26,0x0\n- [ be32, 0xb44fe8, 0x62240000 ]  # orir4,r17,0x0\n- [ be32, 0xb44fec, 0x62a50000 ]  # orir5,r21,0x0\n- [ be32, 0xb44ff0, 0x48288003 ]  # bla0x288000\n- [ be32, 0xb44ff4, 0xe8610130 ]  # ld r3,0x130(r1)\n- [ be32, 0xb44ff8, 0x4828c326 ]  # ba 0x28c324"));
            cbList.Items.Add(new ListItem("p5_4KBustupsOnly by rexis (4K Mod Bustups Only) <br><span class=\"desc\">" +
                "To be used only with 4K Bustup Mod by rexis.</span>", "p5_4KBustupsOnly: &p5_4KBustupsOnly\n" +
                "- [ be32, 0x1cffb0, 0x48b45007 ] # bustups A\n- [ be32, 0x1d027C, 0x48b45007 ]\n- [ be32, 0x1d039C, 0x48b45007 ]\n- [ be32, 0x1cffd4, 0x48b45007 ]\n- [ be32, 0x1d02a0, 0x48b45007 ]\n- [ be32, 0x1d03c0, 0x48b45007 ]\n  \n- [ be32, 0xb45004, 0x38a00003 ] # li     r5,0x3\n- [ be32, 0xb45008, 0x7c632bd2 ] # divd   r3,r3,r5\n- [ be32, 0xb4500c, 0x4e800020 ] # blr\n- [ be32, 0x1db940, 0x48b45007 ]  # navigator portraits\n- [ be32, 0x1db544, 0x48b45007 ]\n- [ be32, 0x1db684, 0x48b45007 ]\n- [ be32, 0x1db978, 0x48b45007 ]\n- [ be32, 0x1db568, 0x48b45007 ]\n- [ be32, 0x1db6a8, 0x48b45007 ]"));
            cbList.Items.Add(new ListItem("p5_BgmOrder by TGEnigma, Lipsum (Encounter BGM in Order) <br><span class=\"desc\">" +
                "Plays alternate BGM files in order instead of shuffling)</span>", "p5_BgmOrder: &p5_BgmOrder\n" +
                "# patch SoundManager__SetEquipBgm\n# branch to trampoline\n- [ be32, 0x0006CD68, 0x48B44B52 ] # ba 0x00B44B50\n\n# trampoline\n- [ be32, 0x00B44B50, 0x3FDE3000 ] # addis  r30, r30, 0x3000 -> 0x30B49738\n- [ be32, 0x00B44B54, 0xA07E0000 ] # lhzr3, 0x0(r30)\n- [ be32, 0x00B44B58, 0x38630001 ] # addi   r3, r3, 0x1\n- [ be32, 0x00B44B5C, 0x2803000B ] # cmplwi r3, 0xb (MaxBgm)\n\n- [ be16, 0x00B44B5E, 11 ] # bgm_10 -> 11\n\n- [ be32, 0x00B44B60, 0x41800008 ] # blt+0x8\n- [ be32, 0x00B44B64, 0x38600000 ] # li r3, 0x0\n\n# patch music id\n- [ be32, 0x00B44B68, 0xB07E0000 ] # sth   r3, 0(r30)\n\n# return\n- [ be32, 0x00B44B6C, 0x2C1E0000 ] # cmpwi r30, 0\n- [ be32, 0x00B44B70, 0x4806CD6E ] # ba0x0006CD6C\n\n# patch Btl__PlayBgm\n# branch to trampoline\n- [ be32, 0x0063ACE4, 0x48B44B87 ] # bla 0x00B44B84 (trampoline)\n- [ be32, 0x0063ACE8, 0x4806CCBB ] # bla 0x0006CCB8 (SoundManager__GetBgmId)\n\n# trampoline\n\n# check and return if not normal battle bgm\n- [ be32, 0x00B44B84, 0x2C1F012C ] # cmpwi r31, 300 # normal battle\n- [ be32, 0x00B44B88, 0x41820008 ] # beq   8# return if not normal battle music\n- [ be32, 0x00B44B8C, 0x4E800020 ] # blr\n\n# randomize sound bank\n- [ be32, 0x00B44B90, 0x4806CCCB ] # bla 0x0006CCC8 (SoundManager__SetEquipBgm)\n\n# return\n- [ be32, 0x00B44B94, 0x4863ACEA ] # ba 0x0063ACE8"));
            cbList.Items.Add(new ListItem("p5_BgmRandom by TGEnigma (Encounter BGM Random Order) <br><span class=\"desc\">" +
                "Plays encounter BGM in random order.</span>", "p5_BgmRandom: &p5_BgmRandom\n" +
                "# patch SoundManager__SetEquipBgm\n# branch to trampoline\n- [ be32, 0x0006CD68, 0x48B44B52 ] # ba 0x00B44B50\n\n# trampoline\n# Rnd() % MaxBgm\n- [ be32, 0x00B44B50, 0x4891DA07 ] # bla   0x0091DA04 (Rnd)\n- [ be32, 0x00B44B54, 0x38C0000B ] # li    r6, 11 (MaxBgm)\n\n- [ be16, 0x00B44B56, 11 ] # bgm_10 -> 11\n\n- [ be32, 0x00B44B58, 0x30860001 ] # addic r4, r6, 1\n- [ be32, 0x00B44B5C, 0x7C832396 ] # divwu r4, r3, r4\n- [ be32, 0x00B44B60, 0x7CA431D6 ] # mullw r5, r4, r6\n- [ be32, 0x00B44B64, 0x7C852014 ] # addc  r4, r5, r4\n- [ be32, 0x00B44B68, 0x7C641810 ] # subfc r3, r4, r3\n- [ be32, 0x00B44B6C, 0x7C6307B4 ] # extsw r3, r3\n\n# patch music id\n- [ be32, 0x00B44B70, 0x3FDE3000 ] # addis r30, r30, 0x3000 -> 0x30B49738\n- [ be32, 0x00B44B74, 0xB07E0000 ] # sth   r3, 0(r30)\n\n# return\n- [ be32, 0x00B44B78, 0x2C1E0000 ] # cmpwi r30, 0\n- [ be32, 0x00B44B7C, 0x4806CD6E ] # ba    0x0006CD6C\n\n# patch Btl__PlayBgm\n# branch to trampoline\n- [ be32, 0x0063ACE4, 0x48B44B87 ] # bla 0x00B44B84 (trampoline)\n- [ be32, 0x0063ACE8, 0x4806CCBB ] # bla 0x0006CCB8 (SoundManager__GetBgmId)\n\n# trampoline\n\n# check and return if not normal battle bgm\n- [ be32, 0x00B44B84, 0x2C1F012C ] # cmpwi r31, 300 # normal battle\n- [ be32, 0x00B44B88, 0x41820008 ] # beq   8        # return if not normal battle music\n- [ be32, 0x00B44B8C, 0x4E800020 ] # blr\n\n# randomize sound bank\n- [ be32, 0x00B44B90, 0x4806CCCB ] # bla 0x0006CCC8 (SoundManager__SetEquipBgm)\n\n# return\n- [ be32, 0x00B44B94, 0x4863ACEA ] # ba 0x0063ACE8"));
            cbList.Items.Add(new ListItem("p5_DisableDLCUnlockMessages by TGEnigma (Disable DLC Unlock Messages) <br><span class=\"desc\">" +
                "</span>", "p5_DisableDLCUnlockMessages: &p5_DisableDLCUnlockMessages\n" +
                "- [ be32, 0x197AE8, 0x4E800020 ]"));
            cbList.Items.Add(new ListItem("p5_DisableBlur by TGEnigma, ruipin, kd-11 (Disable Blur Filter) <br><span class=\"desc\">" +
                "</span>", "p5_DisableBlur: &p5_DisableBlur\n" +
                "- [ be32, 0x00FEE27A, 0x9E001700 ]\n- [ be32, 0x00FEE27E, 0xC801001D ]\n- [ be32, 0x00FEE282, 0x00000000 ]\n- [ be32, 0x00FEE286, 0x00000000 ]\n- [ be32, 0x00FEE28A, 0x1E810100 ]\n- [ be32, 0x00FEE28E, 0xC800001D ]\n- [ be32, 0x00FEE292, 0x00000000 ]\n- [ be32, 0x00FEE296, 0x00000000 ]"));
            cbList.Items.Add(new ListItem("p5_DisableDistortion by TGEnigma, ruipin, kd-11 (Disable Normal Distortion Filter [<=99% Alert & Velvet Room)] <br><span class=\"desc\">" +
                "</span>", "p5_DisableDistortion: &p5_DisableDistortion\n" +
                "- [ be32, 0x00FE2E28, 0x9E001700 ]\n- [ be32, 0x00FE2E2C, 0xC801001D ]\n- [ be32, 0x00FE2E30, 0x00000000 ]\n- [ be32, 0x00FE2E34, 0x00000000 ]\n- [ be32, 0x00FE2E38, 0x1E810100 ]\n- [ be32, 0x00FE2E3C, 0xC800001D ]\n- [ be32, 0x00FE2E40, 0x00000000 ]\n- [ be32, 0x00FE2E44, 0x00000000 ]"));
            cbList.Items.Add(new ListItem("p5_Disable100PctDistortion by TGEnigma, ruipin, kd-11 (Disable Angry Distortion Filter [100% Alert]) <br><span class=\"desc\">" +
                "</span>", "p5_Disable100PctDistortion: &p5_Disable100PctDistortion\n" +
                "- [ be32, 0x00FE31CC, 0x9E001700 ]\n- [ be32, 0x00FE31D0, 0xC801001D ]\n- [ be32, 0x00FE31D4, 0x00000000 ]\n- [ be32, 0x00FE31D8, 0x00000000 ]\n- [ be32, 0x00FE31DC, 0x1E810100 ]\n- [ be32, 0x00FE31E0, 0xC800001D ]\n- [ be32, 0x00FE31E4, 0x00000000 ]\n- [ be32, 0x00FE31E8, 0x00000000 ]"));
            cbList.Items.Add(new ListItem("p5_NoHudLite by TGEnigma (Disable HUD Elements) <br><span class=\"desc\">" +
                "Elements can disabled separately by adding/removing their respective lines from the patch.</span>",
                "p5_NoHudLite: &p5_NoHudLite\n- [ be32, 0xDE4EC, 0x60000000 ] # mission list\n" +
                "- [ be32, 0xE83F4, 0x60000000 ] # place pict\n- [ be32, 0xE5920, 0x60000000 ] # check\n- [ be32, 0x69CC4, 0x38600001 ] # alert\n- [ be32, 0x5F678, 0x60000000 ] # date\n- [ be32, 0x38A0D0, 0x4838A186 ] # misc field hud\n- [ be32, 0x28FBA0, 0x38600000 ] # party panel\n- [ be32, 0x28FBA4, 0x4E800020 ] # party panel\n- [ be32, 0xD6B48, 0x60000000 ] # mini map\n- [ be32, 0xD6490, 0x60000000 ] # mini map"));
            cbList.Items.Add(new ListItem("p5_NoHud by TGEnigma (Disable HUD Elements [Aggressive]) <br><span class=\"desc\">" +
                "Disable HUD by disabling rendering of 2D elements entirely. Breaks things.</span>",
                "p5_NoHud: &p5_NoHud\n" +
                "- [ be32, 0x116934, 0x4E800020 ]"));
            //Lipsum (Portraits)
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_PortraitPartsIdx by Lipsum (for manually setting spdID of battle portraits)", "p5_pp_InBattle_PortraitPartsIdx: &p5_pp_InBattle_PortraitPartsIdx\n- [ be32, 0x00B6644C, 0 ] # Inactive Bg spdIdx NONE\n- [ be32, 0x00B66450, 1 ] # Inactive Bg spdIdx Joker\n- [ be32, 0x00B66454, 2 ] # Inactive Bg spdIdx Ryuji\n- [ be32, 0x00B66458, 3 ] # Inactive Bg spdIdx Morgana\n- [ be32, 0x00B6645C, 4 ] # Inactive Bg spdIdx Ann\n- [ be32, 0x00B66460, 5 ] # Inactive Bg spdIdx Yusuke\n- [ be32, 0x00B66464, 6 ] # Inactive Bg spdIdx Makoto\n- [ be32, 0x00B66468, 7 ] # Inactive Bg spdIdx Haru\n- [ be32, 0x00B6646C, 0 ] # Inactive Bg spdIdx Futaba\n- [ be32, 0x00B66470, 8 ] # Inactive Bg spdIdx Akechi\n- [ be32, 0x00B66474, 0 ] # Inactive Fg spdIdx NONE\n- [ be32, 0x00B66478, 61 ] # Inactive Fg spdIdx Joker\n- [ be32, 0x00B6647C, 62 ] # Inactive Fg spdIdx Ryuji\n- [ be32, 0x00B66480, 63 ] # Inactive Fg spdIdx Morgana\n- [ be32, 0x00B66484, 64 ] # Inactive Fg spdIdx Ann\n- [ be32, 0x00B66488, 65 ] # Inactive Fg spdIdx Yusuke\n- [ be32, 0x00B6648C, 66 ] # Inactive Fg spdIdx Makoto\n- [ be32, 0x00B66490, 67 ] # Inactive Fg spdIdx Haru\n- [ be32, 0x00B66494, 0 ] # Inactive Fg spdIdx Futaba\n- [ be32, 0x00B66498, 68 ] # Inactive Fg spdIdx Akechi\n- [ be32, 0x00B6649C, 0 ] # Active spdIdx NONE\n- [ be32, 0x00B664A0, 52 ] # Active spdIdx Joker\n- [ be32, 0x00B664A4, 53 ] # Active spdIdx Ryuji\n- [ be32, 0x00B664A8, 54 ] # Active spdIdx Morgana\n- [ be32, 0x00B664AC, 55 ] # Active spdIdx Ann\n- [ be32, 0x00B664B0, 56 ] # Active spdIdx Yusuke\n- [ be32, 0x00B664B4, 57 ] # Active spdIdx Makoto\n- [ be32, 0x00B664B8, 58 ] # Active spdIdx Haru\n- [ be32, 0x00B664BC, 0 ] # Active spdIdx Futaba\n- [ be32, 0x00B664C0, 59 ] # Active spdIdx Akechi\n- [ be32, 0x00B664C4, 0 ] # Active plgIdx NONE\n- [ be32, 0x00B664C8, 0 ] # Active plgIdx Joker\n- [ be32, 0x00B664CC, 1 ] # Active plgIdx Ryuji\n- [ be32, 0x00B664D0, 2 ] # Active plgIdx Morgana\n- [ be32, 0x00B664D4, 3 ] # Active plgIdx Ann\n- [ be32, 0x00B664D8, 4 ] # Active plgIdx Yusuke\n- [ be32, 0x00B664DC, 5 ] # Active plgIdx Makoto\n- [ be32, 0x00B664E0, 6 ] # Active plgIdx Haru\n- [ be32, 0x00B664E4, 0 ] # Active plgIdx Futaba\n- [ be32, 0x00B664E8, 7 ] # Active plgIdx Akechi"));
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_PortraitPosPerMemberPerTurn by Lipsum (for manually setting battle portrait position per member's turn)", "p5_pp_InBattle_PortraitPosPerMemberPerTurn: &p5_pp_InBattle_PortraitPosPerMemberPerTurn\n- [ be32, 0x00B664EC, 701 ] # @--- Turn @--- X\n- [ be32, 0x00B664F0, 648 ] # @--- Turn @--- Y\n- [ be32, 0x00B664F4, 864 ] # @--- Turn -@-- X\n- [ be32, 0x00B664F8, 659 ] # @--- Turn -@-- Y\n- [ be32, 0x00B664FC, 1018 ] # @--- Turn --@- X\n- [ be32, 0x00B66500, 649 ] # @--- Turn --@- Y\n- [ be32, 0x00B66504, 1177 ] # @--- Turn ---@ X\n- [ be32, 0x00B66508, 655 ] # @--- Turn ---@ Y\n- [ be32, 0x00B6650C, 701 ] # -@-- Turn @--- X\n- [ be32, 0x00B66510, 648 ] # -@-- Turn @--- Y\n- [ be32, 0x00B66514, 864 ] # -@-- Turn -@-- X\n- [ be32, 0x00B66518, 659 ] # -@-- Turn -@-- Y\n- [ be32, 0x00B6651C, 1018 ] # -@-- Turn --@- X\n- [ be32, 0x00B66520, 649 ] # -@-- Turn --@- Y\n- [ be32, 0x00B66524, 1177 ] # -@-- Turn ---@ X\n- [ be32, 0x00B66528, 655 ] # -@-- Turn ---@ Y\n- [ be32, 0x00B6652C, 701 ] # --@- Turn @--- X\n- [ be32, 0x00B66530, 648 ] # --@- Turn @--- Y\n- [ be32, 0x00B66534, 864 ] # --@- Turn -@-- X\n- [ be32, 0x00B66538, 659 ] # --@- Turn -@-- Y\n- [ be32, 0x00B6653C, 1018 ] # --@- Turn --@- X\n- [ be32, 0x00B66540, 649 ] # --@- Turn --@- Y\n- [ be32, 0x00B66544, 1177 ] # --@- Turn ---@ X\n- [ be32, 0x00B66548, 655 ] # --@- Turn ---@ Y\n- [ be32, 0x00B6654C, 701 ] # ---@ Turn @--- X\n- [ be32, 0x00B66550, 648 ] # ---@ Turn @--- Y\n- [ be32, 0x00B66554, 864 ] # ---@ Turn -@-- X\n- [ be32, 0x00B66558, 659 ] # ---@ Turn -@-- Y\n- [ be32, 0x00B6655C, 1018 ] # ---@ Turn --@- X\n- [ be32, 0x00B66560, 649 ] # ---@ Turn --@- Y\n- [ be32, 0x00B66564, 1177 ] # ---@ Turn ---@ X\n- [ be32, 0x00B66568, 655 ] # ---@ Turn ---@ Y\n- [ be32, 0x00B6656C, 701 ] # Enemy Turn @--- X\n- [ be32, 0x00B66570, 648 ] # Enemy Turn @--- Y\n- [ be32, 0x00B66574, 864 ] # Enemy Turn -@-- X\n- [ be32, 0x00B66578, 659 ] # Enemy Turn -@-- Y\n- [ be32, 0x00B6657C, 1018 ] # Enemy Turn --@- X\n- [ be32, 0x00B66580, 649 ] # Enemy Turn --@- Y\n- [ be32, 0x00B66584, 1177 ] # Enemy Turn ---@ X\n- [ be32, 0x00B66588, 655 ] # Enemy Turn ---@ Y"));
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_InactiveHpSpBgPos by Lipsum (for manually setting HP/SP position of inactive battle portraits)", "p5_pp_InBattle_InactiveHpSpBgPos: &p5_pp_InBattle_InactiveHpSpBgPos\n- [ be32, 0x00B6658C, 0 ] # Inactive Bg01 NONE X\n- [ be32, 0x00B66590, 0 ] # Inactive Bg01 NONE Y\n- [ be32, 0x00B66594, 0 ] # Inactive Bg01 NONE Rot\n- [ be32, 0x00B66598, 87 ] # Inactive Bg01 Joker X\n- [ be32, 0x00B6659C, 82 ] # Inactive Bg01 Joker Y\n- [ be32, 0x00B665A0, -5 ] # Inactive Bg01 Joker Rot\n- [ be32, 0x00B665A4, 86 ] # Inactive Bg01 Ryuji X\n- [ be32, 0x00B665A8, 85 ] # Inactive Bg01 Ryuji Y\n- [ be32, 0x00B665AC, -1 ] # Inactive Bg01 Ryuji Rot\n- [ be32, 0x00B665B0, 97 ] # Inactive Bg01 Morgana X\n- [ be32, 0x00B665B4, 89 ] # Inactive Bg01 Morgana Y\n- [ be32, 0x00B665B8, -5 ] # Inactive Bg01 Morgana Rot\n- [ be32, 0x00B665BC, 91 ] # Inactive Bg01 Ann X\n- [ be32, 0x00B665C0, 84 ] # Inactive Bg01 Ann Y\n- [ be32, 0x00B665C4, 1 ] # Inactive Bg01 Ann Rot\n- [ be32, 0x00B665C8, 86 ] # Inactive Bg01 Yusuke X\n- [ be32, 0x00B665CC, 81 ] # Inactive Bg01 Yusuke Y\n- [ be32, 0x00B665D0, -4 ] # Inactive Bg01 Yusuke Rot\n- [ be32, 0x00B665D4, 96 ] # Inactive Bg01 Makoto X\n- [ be32, 0x00B665D8, 88 ] # Inactive Bg01 Makoto Y\n- [ be32, 0x00B665DC, -2 ] # Inactive Bg01 Makoto Rot\n- [ be32, 0x00B665E0, 92 ] # Inactive Bg01 Haru X\n- [ be32, 0x00B665E4, 86 ] # Inactive Bg01 Haru Y\n- [ be32, 0x00B665E8, -7 ] # Inactive Bg01 Haru Rot\n- [ be32, 0x00B665EC, 0 ] # Inactive Bg01 Futaba X\n- [ be32, 0x00B665F0, 0 ] # Inactive Bg01 Futaba Y\n- [ be32, 0x00B665F4, 0 ] # Inactive Bg01 Futaba Rot\n- [ be32, 0x00B665F8, 90 ] # Inactive Bg01 Akechi X\n- [ be32, 0x00B665FC, 84 ] # Inactive Bg01 Akechi Y\n- [ be32, 0x00B66600, 0 ] # Inactive Bg01 Akechi Rot\n- [ be32, 0x00B66604, 0 ] # Inactive Bg02 NONE X\n- [ be32, 0x00B66608, 0 ] # Inactive Bg02 NONE Y\n- [ be32, 0x00B6660C, 0 ] # Inactive Bg02 NONE Rot\n- [ be32, 0x00B66610, 115 ] # Inactive Bg02 Joker X\n- [ be32, 0x00B66614, 93 ] # Inactive Bg02 Joker Y\n- [ be32, 0x00B66618, 7 ] # Inactive Bg02 Joker Rot\n- [ be32, 0x00B6661C, 115 ] # Inactive Bg02 Ryuji X\n- [ be32, 0x00B66620, 89 ] # Inactive Bg02 Ryuji Y\n- [ be32, 0x00B66624, 1 ] # Inactive Bg02 Ryuji Rot\n- [ be32, 0x00B66628, 121 ] # Inactive Bg02 Morgana X\n- [ be32, 0x00B6662C, 99 ] # Inactive Bg02 Morgana Y\n- [ be32, 0x00B66630, 7 ] # Inactive Bg02 Morgana Rot\n- [ be32, 0x00B66634, 110 ] # Inactive Bg02 Ann X\n- [ be32, 0x00B66638, 92 ] # Inactive Bg02 Ann Y\n- [ be32, 0x00B6663C, 7 ] # Inactive Bg02 Ann Rot\n- [ be32, 0x00B66640, 110 ] # Inactive Bg02 Yusuke X\n- [ be32, 0x00B66644, 90 ] # Inactive Bg02 Yusuke Y\n- [ be32, 0x00B66648, 5 ] # Inactive Bg02 Yusuke Rot\n- [ be32, 0x00B6664C, 121 ] # Inactive Bg02 Makoto X\n- [ be32, 0x00B66650, 95 ] # Inactive Bg02 Makoto Y\n- [ be32, 0x00B66654, -8 ] # Inactive Bg02 Makoto Rot\n- [ be32, 0x00B66658, 115 ] # Inactive Bg02 Haru X\n- [ be32, 0x00B6665C, 100 ] # Inactive Bg02 Haru Y\n- [ be32, 0x00B66660, 5 ] # Inactive Bg02 Haru Rot\n- [ be32, 0x00B66664, 0 ] # Inactive Bg02 Futaba X\n- [ be32, 0x00B66668, 0 ] # Inactive Bg02 Futaba Y\n- [ be32, 0x00B6666C, 0 ] # Inactive Bg02 Futaba Rot\n- [ be32, 0x00B66670, 106 ] # Inactive Bg02 Akechi X\n- [ be32, 0x00B66674, 86 ] # Inactive Bg02 Akechi Y\n- [ be32, 0x00B66678, 0 ] # Inactive Bg02 Akechi Rot"));
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_InactivePortraitPos by Lipsum (for manually setting position of inactive battle portraits)", "p5_pp_InBattle_InactivePortraitPos: &p5_pp_InBattle_InactivePortraitPos\n- [ be32, 0x00B6667C, 0 ] # Bg NONE X\n- [ be32, 0x00B66680, 0 ] # Bg NONE Y\n- [ be32, 0x00B66684, 11 ] # Bg Joker X\n- [ be32, 0x00B66688, 14 ] # Bg Joker Y\n- [ be32, 0x00B6668C, 13 ] # Bg Ryuji X\n- [ be32, 0x00B66690, 7 ] # Bg Ryuji Y\n- [ be32, 0x00B66694, 17 ] # Bg Morgana X\n- [ be32, 0x00B66698, 20 ] # Bg Morgana Y\n- [ be32, 0x00B6669C, 7 ] # Bg Ann X\n- [ be32, 0x00B666A0, 11 ] # Bg Ann Y\n- [ be32, 0x00B666A4, 1 ] # Bg Yusuke X\n- [ be32, 0x00B666A8, 16 ] # Bg Yusuke Y\n- [ be32, 0x00B666AC, 16 ] # Bg Makoto X\n- [ be32, 0x00B666B0, 17 ] # Bg Makoto Y\n- [ be32, 0x00B666B4, 3 ] # Bg Haru X\n- [ be32, 0x00B666B8, 0 ] # Bg Haru Y\n- [ be32, 0x00B666BC, 0 ] # Bg Futaba X\n- [ be32, 0x00B666C0, 0 ] # Bg Futaba Y\n- [ be32, 0x00B666C4, 11 ] # Bg Akechi X\n- [ be32, 0x00B666C8, 15 ] # Bg Akechi Y\n- [ be32, 0x00B666CC, 0 ] # Fg NONE X\n- [ be32, 0x00B666D0, 0 ] # Fg NONE Y\n- [ be32, 0x00B666D4, 22 ] # Fg Joker X\n- [ be32, 0x00B666D8, 23 ] # Fg Joker Y\n- [ be32, 0x00B666DC, 21 ] # Fg Ryuji X\n- [ be32, 0x00B666E0, 21 ] # Fg Ryuji Y\n- [ be32, 0x00B666E4, 24 ] # Fg Morgana X\n- [ be32, 0x00B666E8, 28 ] # Fg Morgana Y\n- [ be32, 0x00B666EC, 22 ] # Fg Ann X\n- [ be32, 0x00B666F0, 17 ] # Fg Ann Y\n- [ be32, 0x00B666F4, 14 ] # Fg Yusuke X\n- [ be32, 0x00B666F8, 23 ] # Fg Yusuke Y\n- [ be32, 0x00B666FC, 24 ] # Fg Makoto X\n- [ be32, 0x00B66700, 24 ] # Fg Makoto Y\n- [ be32, 0x00B66704, 11 ] # Fg Haru X\n- [ be32, 0x00B66708, 22 ] # Fg Haru Y\n- [ be32, 0x00B6670C, 0 ] # Fg Futaba X\n- [ be32, 0x00B66710, 0 ] # Fg Futaba Y\n- [ be32, 0x00B66714, 13 ] # Fg Akechi X\n- [ be32, 0x00B66718, 22 ] # Fg Akechi Y"));
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_MiscPos by Lipsum (for manually setting position of battle portraits' HP/SP background)", "p5_pp_InBattle_MiscPos: &p5_pp_InBattle_MiscPos\n- [ be32, 0x00B66794, -27 ] # 00. ---\n- [ be32, 0x00B66798, -28 ] # 00. ---\n- [ be32, 0x00B6679C, -43 ] # 01. ---\n- [ be32, 0x00B667A0, -26 ] # 01. ---\n- [ be32, 0x00B667A4, -57 ] # 02. ---\n- [ be32, 0x00B667A8, -24 ] # 02. ---\n- [ be32, 0x00B667AC, -28 ] # 03. ---\n- [ be32, 0x00B667B0, -28 ] # 03. ---\n- [ be32, 0x00B667B4, -40 ] # 04. ---\n- [ be32, 0x00B667B8, -27 ] # 04. ---\n- [ be32, 0x00B667BC, -58 ] # 05. ---\n- [ be32, 0x00B667C0, -24 ] # 05. ---\n- [ be32, 0x00B667C4, -27 ] # 06. hp_1 X\n- [ be32, 0x00B667C8, -29 ] # 06. hp_1 Y\n- [ be32, 0x00B667CC, -41 ] # 07. hp_10 X\n- [ be32, 0x00B667D0, -27 ] # 07. hp_10 Y\n- [ be32, 0x00B667D4, -52 ] # 08. hp_100 X\n- [ be32, 0x00B667D8, -26 ] # 08. hp_100 Y\n- [ be32, 0x00B667DC, -26 ] # 09. ---\n- [ be32, 0x00B667E0, -28 ] # 09. ---\n- [ be32, 0x00B667E4, -38 ] # 10. ---\n- [ be32, 0x00B667E8, -27 ] # 10. ---\n- [ be32, 0x00B667EC, -52 ] # 11. ---\n- [ be32, 0x00B667F0, -26 ] # 11. ---\n- [ be32, 0x00B667F4, -23 ] # 12. ---\n- [ be32, 0x00B667F8, -30 ] # 12. ---\n- [ be32, 0x00B667FC, -40 ] # 13. ---\n- [ be32, 0x00B66800, -27 ] # 13. ---\n- [ be32, 0x00B66804, -52 ] # 14. ---\n- [ be32, 0x00B66808, -26 ] # 14. ---\n- [ be32, 0x00B6680C, -22 ] # 15. sp_1 X\n- [ be32, 0x00B66810, -29 ] # 15. sp_1 Y\n- [ be32, 0x00B66814, -35 ] # 16. sp_10 X\n- [ be32, 0x00B66818, -28 ] # 16. sp_10 Y\n- [ be32, 0x00B6681C, -51 ] # 17. sp_100 X\n- [ be32, 0x00B66820, -26 ] # 17. sp_100 Y"));
            //cbList.Items.Add(new ListItem("p5_pp_NonBattle_PortraitFgPos by Lipsum (for manually setting foreground position of battle portraits' HP/SP bars)", "p5_pp_NonBattle_PortraitFgPos: &p5_pp_NonBattle_PortraitFgPos\n- [ be32, 0x00B66824, 0 ] # Fg NONE X\n- [ be32, 0x00B66828, 0 ] # Fg NONE Y\n- [ be32, 0x00B6682C, 11 ] # Fg Joker X\n- [ be32, 0x00B66830, 9 ] # Fg Joker Y\n- [ be32, 0x00B66834, 8 ] # Fg Ryuji X\n- [ be32, 0x00B66838, 14 ] # Fg Ryuji Y\n- [ be32, 0x00B6683C, 7 ] # Fg Morgana X\n- [ be32, 0x00B66840, 8 ] # Fg Morgana Y\n- [ be32, 0x00B66844, 15 ] # Fg Ann X\n- [ be32, 0x00B66848, 6 ] # Fg Ann Y\n- [ be32, 0x00B6684C, 13 ] # Fg Yusuke X\n- [ be32, 0x00B66850, 7 ] # Fg Yusuke Y\n- [ be32, 0x00B66854, 8 ] # Fg Makoto X\n- [ be32, 0x00B66858, 7 ] # Fg Makoto Y\n- [ be32, 0x00B6685C, 8 ] # Fg Haru X\n- [ be32, 0x00B66860, 22 ] # Fg Haru Y\n- [ be32, 0x00B66864, 0 ] # Fg Futaba X\n- [ be32, 0x00B66868, 0 ] # Fg Futaba Y\n- [ be32, 0x00B6686C, 2 ] # Fg Akechi X\n- [ be32, 0x00B66870, 7 ] # Fg Akechi Y"));
            //cbList.Items.Add(new ListItem("p5_pp_NonBattle_PortraitPartsIdx by Lipsum (for manually setting spdID of non-battle portraits)", "p5_pp_NonBattle_PortraitPartsIdx: &p5_pp_NonBattle_PortraitPartsIdx\n- [ be32, 0x00B66874, 0 ] # NONE Bg Back spdIdx\n- [ be32, 0x00B66878, 0 ] # NONE Bg Front spdIdx\n- [ be32, 0x00B6687C, 0 ] # NONE Fg spdIdx\n- [ be32, 0x00B66880, 69 ] # Joker Bg Back spdIdx\n- [ be32, 0x00B66884, 1 ] # Joker Bg Front spdIdx\n- [ be32, 0x00B66888, 77 ] # Joker Fg spdIdx\n- [ be32, 0x00B6688C, 70 ] # Ryuji Bg Back spdIdx\n- [ be32, 0x00B66890, 2 ] # Ryuji Bg Front spdIdx\n- [ be32, 0x00B66894, 78 ] # Ryuji Fg spdIdx\n- [ be32, 0x00B66898, 71 ] # Morgana Bg Back spdIdx\n- [ be32, 0x00B6689C, 3 ] # Morgana Bg Front spdIdx\n- [ be32, 0x00B668A0, 79 ] # Morgana Fg spdIdx\n- [ be32, 0x00B668A4, 72 ] # Ann Bg Back spdIdx\n- [ be32, 0x00B668A8, 4 ] # Ann Bg Front spdIdx\n- [ be32, 0x00B668AC, 80 ] # Ann Fg spdIdx\n- [ be32, 0x00B668B0, 73 ] # Yusuke Bg Back spdIdx\n- [ be32, 0x00B668B4, 5 ] # Yusuke Bg Front spdIdx\n- [ be32, 0x00B668B8, 81 ] # Yusuke Fg spdIdx\n- [ be32, 0x00B668BC, 74 ] # Makoto Bg Back spdIdx\n- [ be32, 0x00B668C0, 6 ] # Makoto Bg Front spdIdx\n- [ be32, 0x00B668C4, 82 ] # Makoto Fg spdIdx\n- [ be32, 0x00B668C8, 75 ] # Haru Bg Back spdIdx\n- [ be32, 0x00B668CC, 7 ] # Haru Bg Front spdIdx\n- [ be32, 0x00B668D0, 83 ] # Haru Fg spdIdx\n- [ be32, 0x00B668D4, 0 ] # Futaba Bg Back spdIdx\n- [ be32, 0x00B668D8, 0 ] # Futaba Bg Front spdIdx\n- [ be32, 0x00B668DC, 0 ] # Futaba Fg spdIdx\n- [ be32, 0x00B668E0, 76 ] # Akechi Bg Back spdIdx\n- [ be32, 0x00B668E4, 8 ] # Akechi Bg Front spdIdx\n- [ be32, 0x00B668E8, 84 ] # Akechi Fg spdIdx"));
            //cbList.Items.Add(new ListItem("p5_pp_NonBatle_PortraitPosPerPanelPerMember by Lipsum (for manually setting position of non-battle portraits per member)", "p5_pp_NonBatle_PortraitPosPerPanelPerMember: &p5_pp_NonBatle_PortraitPosPerPanelPerMember\n- [ be32, 0x00B668EC, 0 ] # -@-- NONE X\n- [ be32, 0x00B668F0, 0 ] # -@-- NONE Y\n- [ be32, 0x00B668F4, 22 ] # -@-- Joker X\n- [ be32, 0x00B668F8, -59 ] # -@-- Joker Y\n- [ be32, 0x00B668FC, 2 ] # -@-- Ryuji X\n- [ be32, 0x00B66900, -65 ] # -@-- Ryuji Y\n- [ be32, 0x00B66904, 0 ] # -@-- Morgana X\n- [ be32, 0x00B66908, -61 ] # -@-- Morgana Y\n- [ be32, 0x00B6690C, -6 ] # -@-- Ann X\n- [ be32, 0x00B66910, -67 ] # -@-- Ann Y\n- [ be32, 0x00B66914, -6 ] # -@-- Yusuke X\n- [ be32, 0x00B66918, -61 ] # -@-- Yusuke Y\n- [ be32, 0x00B6691C, -1 ] # -@-- Makoto X\n- [ be32, 0x00B66920, -61 ] # -@-- Makoto Y\n- [ be32, 0x00B66924, -12 ] # -@-- Haru X\n- [ be32, 0x00B66928, -80 ] # -@-- Haru Y\n- [ be32, 0x00B6692C, 0 ] # -@-- Futaba X\n- [ be32, 0x00B66930, 0 ] # -@-- Futaba Y\n- [ be32, 0x00B66934, -8 ] # -@-- Akechi X\n- [ be32, 0x00B66938, -63 ] # -@-- Akechi Y\n- [ be32, 0x00B6693C, 0 ] # --@- NONE X\n- [ be32, 0x00B66940, 0 ] # --@- NONE Y\n- [ be32, 0x00B66944, 0 ] # --@- Joker X\n- [ be32, 0x00B66948, 0 ] # --@- Joker Y\n- [ be32, 0x00B6694C, -8 ] # --@- Ryuji X\n- [ be32, 0x00B66950, -62 ] # --@- Ryuji Y\n- [ be32, 0x00B66954, -5 ] # --@- Morgana X\n- [ be32, 0x00B66958, -60 ] # --@- Morgana Y\n- [ be32, 0x00B6695C, -16 ] # --@- Ann X\n- [ be32, 0x00B66960, -59 ] # --@- Ann Y\n- [ be32, 0x00B66964, -17 ] # --@- Yusuke X\n- [ be32, 0x00B66968, -56 ] # --@- Yusuke Y\n- [ be32, 0x00B6696C, -9 ] # --@- Makoto X\n- [ be32, 0x00B66970, -55 ] # --@- Makoto Y\n- [ be32, 0x00B66974, -22 ] # --@- Haru X\n- [ be32, 0x00B66978, -75 ] # --@- Haru Y\n- [ be32, 0x00B6697C, 0 ] # --@- Futaba X\n- [ be32, 0x00B66980, 0 ] # --@- Futaba Y\n- [ be32, 0x00B66984, -12 ] # --@- Akechi X\n- [ be32, 0x00B66988, -58 ] # --@- Akechi Y\n- [ be32, 0x00B6698C, 0 ] # ---@ NONE X\n- [ be32, 0x00B66990, 0 ] # ---@ NONE Y\n- [ be32, 0x00B66994, 0 ] # ---@ Joker X\n- [ be32, 0x00B66998, 0 ] # ---@ Joker Y\n- [ be32, 0x00B6699C, -23 ] # ---@ Ryuji X\n- [ be32, 0x00B669A0, -56 ] # ---@ Ryuji Y\n- [ be32, 0x00B669A4, -25 ] # ---@ Morgana X\n- [ be32, 0x00B669A8, -56 ] # ---@ Morgana Y\n- [ be32, 0x00B669AC, -34 ] # ---@ Ann X\n- [ be32, 0x00B669B0, -57 ] # ---@ Ann Y\n- [ be32, 0x00B669B4, -37 ] # ---@ Yusuke X\n- [ be32, 0x00B669B8, -51 ] # ---@ Yusuke Y\n- [ be32, 0x00B669BC, -28 ] # ---@ Makoto X\n- [ be32, 0x00B669C0, -52 ] # ---@ Makoto Y\n- [ be32, 0x00B669C4, -39 ] # ---@ Haru X\n- [ be32, 0x00B669C8, -69 ] # ---@ Haru Y\n- [ be32, 0x00B669CC, 0 ] # ---@ Futaba X\n- [ be32, 0x00B669D0, 0 ] # ---@ Futaba Y\n- [ be32, 0x00B669D4, -27 ] # ---@ Akechi X\n- [ be32, 0x00B669D8, -54 ] # ---@ Akechi Y"));
            //cbList.Items.Add(new ListItem("p5_pp_NonBatle_BgBoxes by Lipsum (for manually setting position of non-battle portraits' bg boxes)", "p5_pp_NonBatle_BgBoxes: &p5_pp_NonBatle_BgBoxes\n- [ be32, 0x00B669DC, -42 ] # BgBox01 Black X1\n- [ be32, 0x00B669E0, 17 ] # BgBox01 Black Y1\n- [ be32, 0x00B669E4, 43 ] # BgBox01 Black X2\n- [ be32, 0x00B669E8, -32 ] # BgBox01 Black Y2\n- [ be32, 0x00B669EC, -24 ] # BgBox01 Black X3\n- [ be32, 0x00B669F0, 34 ] # BgBox01 Black Y3\n- [ be32, 0x00B669F4, 69 ] # BgBox01 Black X4\n- [ be32, 0x00B669F8, 21 ] # BgBox01 Black Y4\n- [ be32, 0x00B669FC, -46 ] # BgBox01 White X1\n- [ be32, 0x00B66A00, 16 ] # BgBox01 White Y1\n- [ be32, 0x00B66A04, 44 ] # BgBox01 White X2\n- [ be32, 0x00B66A08, -34 ] # BgBox01 White Y2\n- [ be32, 0x00B66A0C, -26 ] # BgBox01 White X3\n- [ be32, 0x00B66A10, 36 ] # BgBox01 White Y3\n- [ be32, 0x00B66A14, 72 ] # BgBox01 White X4\n- [ be32, 0x00B66A18, 23 ] # BgBox01 White Y4\n- [ be32, 0x00B66A1C, -24 ] # BgBox02 Black X1\n- [ be32, 0x00B66A20, -13 ] # BgBox02 Black Y1\n- [ be32, 0x00B66A24, 32 ] # BgBox02 Black X2\n- [ be32, 0x00B66A28, -28 ] # BgBox02 Black Y2\n- [ be32, 0x00B66A2C, -14 ] # BgBox02 Black X3\n- [ be32, 0x00B66A30, 39 ] # BgBox02 Black Y3\n- [ be32, 0x00B66A34, 38 ] # BgBox02 Black X4\n- [ be32, 0x00B66A38, 24 ] # BgBox02 Black Y4\n- [ be32, 0x00B66A3C, -27 ] # BgBox02 White X1\n- [ be32, 0x00B66A40, -14 ] # BgBox02 White Y1\n- [ be32, 0x00B66A44, 34 ] # BgBox02 White X2\n- [ be32, 0x00B66A48, -31 ] # BgBox02 White Y2\n- [ be32, 0x00B66A4C, -15 ] # BgBox02 White X3\n- [ be32, 0x00B66A50, 41 ] # BgBox02 White Y3\n- [ be32, 0x00B66A54, 41 ] # BgBox02 White X4\n- [ be32, 0x00B66A58, 25 ] # BgBox02 White Y4\n- [ be32, 0x00B66A5C, -62 ] # BgBox03 Black X1\n- [ be32, 0x00B66A60, 7 ] # BgBox03 Black Y1\n- [ be32, 0x00B66A64, 44 ] # BgBox03 Black X2\n- [ be32, 0x00B66A68, -19 ] # BgBox03 Black Y2\n- [ be32, 0x00B66A6C, -31 ] # BgBox03 Black X3\n- [ be32, 0x00B66A70, 43 ] # BgBox03 Black Y3\n- [ be32, 0x00B66A74, 59 ] # BgBox03 Black X4\n- [ be32, 0x00B66A78, 12 ] # BgBox03 Black Y4\n- [ be32, 0x00B66A7C, -65 ] # BgBox03 White X1\n- [ be32, 0x00B66A80, 6 ] # BgBox03 White Y1\n- [ be32, 0x00B66A84, 45 ] # BgBox03 White X2\n- [ be32, 0x00B66A88, -21 ] # BgBox03 White Y2\n- [ be32, 0x00B66A8C, -32 ] # BgBox03 White X3\n- [ be32, 0x00B66A90, 46 ] # BgBox03 White Y3\n- [ be32, 0x00B66A94, 61 ] # BgBox03 White X4\n- [ be32, 0x00B66A98, 13 ] # BgBox03 White Y4"));
            //cbList.Items.Add(new ListItem("p5_pp_00 by Lipsum", "p5_pp_00: &p5_pp_00\n- [ be32, 0x00B66A9C, 0 ] # ---\n- [ be32, 0x00B66AA0, 0 ] # ---\n- [ be32, 0x00B66AA4, 0 ] # ---\n- [ be32, 0x00B66AA8, 0 ] # ---\n- [ be32, 0x00B66AAC, 0 ] # ---\n- [ be32, 0x00B66AB0, 0 ] # ---\n- [ be32, 0x00B66AB4, 0 ] # ---\n- [ be32, 0x00B66AB8, 0 ] # ---"));
            //cbList.Items.Add(new ListItem("p5_pp_InBattle_ActivePortraitPartsPos by Lipsum (for manually setting position of active battle portraits)", "p5_pp_InBattle_ActivePortraitPartsPos: &p5_pp_InBattle_ActivePortraitPartsPos\n- [ bef32, 0x00B66ABC, -78 ] # Joker spdX\n- [ bef32, 0x00B66AC0, -104 ] # Joker spdY\n- [ bef32, 0x00B66AC4, -74 ] # Joker plgX\n- [ bef32, 0x00B66AC8, -102 ] # Joker plgY\n- [ bef32, 0x00B66ACC, -13 ] # Joker ailTopX\n- [ bef32, 0x00B66AD0, -45 ] # Joker ailTopY\n- [ bef32, 0x00B66AD4, -29 ] # Joker ailBottomX\n- [ bef32, 0x00B66AD8, 28 ] # Joker ailBottomY\n- [ bef32, 0x00B66ADC, -81 ] # Ryuji spdX\n- [ bef32, 0x00B66AE0, -103 ] # Ryuji spdY\n- [ bef32, 0x00B66AE4, -75 ] # Ryuji plgX\n- [ bef32, 0x00B66AE8, -99 ] # Ryuji plgY\n- [ bef32, 0x00B66AEC, 36 ] # Ryuji ailTopX\n- [ bef32, 0x00B66AF0, -33 ] # Ryuji ailTopY\n- [ bef32, 0x00B66AF4, -21 ] # Ryuji ailBottomX\n- [ bef32, 0x00B66AF8, 33 ] # Ryuji ailBottomY\n- [ bef32, 0x00B66AFC, -77 ] # Morgana spdX\n- [ bef32, 0x00B66B00, -92 ] # Morgana spdY\n- [ bef32, 0x00B66B04, -75 ] # Morgana plgX\n- [ bef32, 0x00B66B08, -86 ] # Morgana plgY\n- [ bef32, 0x00B66B0C, 9 ] # Morgana ailTopX\n- [ bef32, 0x00B66B10, -33 ] # Morgana ailTopY\n- [ bef32, 0x00B66B14, -26 ] # Morgana ailBottomX\n- [ bef32, 0x00B66B18, 30 ] # Morgana ailBottomY\n- [ bef32, 0x00B66B1C, -81 ] # Ann spdX\n- [ bef32, 0x00B66B20, -100 ] # Ann spdY\n- [ bef32, 0x00B66B24, -72 ] # Ann plgX\n- [ bef32, 0x00B66B28, -97 ] # Ann plgY\n- [ bef32, 0x00B66B2C, 14 ] # Ann ailTopX\n- [ bef32, 0x00B66B30, -34 ] # Ann ailTopY\n- [ bef32, 0x00B66B34, -31 ] # Ann ailBottomX\n- [ bef32, 0x00B66B38, 24 ] # Ann ailBottomY\n- [ bef32, 0x00B66B3C, -78 ] # Yusuke spdX\n- [ bef32, 0x00B66B40, -103 ] # Yusuke spdY\n- [ bef32, 0x00B66B44, -73 ] # Yusuke plgX\n- [ bef32, 0x00B66B48, -97 ] # Yusuke plgY\n- [ bef32, 0x00B66B4C, -16 ] # Yusuke ailTopX\n- [ bef32, 0x00B66B50, -37 ] # Yusuke ailTopY\n- [ bef32, 0x00B66B54, -32 ] # Yusuke ailBottomX\n- [ bef32, 0x00B66B58, 34 ] # Yusuke ailBottomY\n- [ bef32, 0x00B66B5C, -87 ] # Makoto spdX\n- [ bef32, 0x00B66B60, -111 ] # Makoto spdY\n- [ bef32, 0x00B66B64, -85 ] # Makoto plgX\n- [ bef32, 0x00B66B68, -102 ] # Makoto plgY\n- [ bef32, 0x00B66B6C, -13 ] # Makoto ailTopX\n- [ bef32, 0x00B66B70, -45 ] # Makoto ailTopY\n- [ bef32, 0x00B66B74, -24 ] # Makoto ailBottomX\n- [ bef32, 0x00B66B78, 36 ] # Makoto ailBottomY\n- [ bef32, 0x00B66B7C, -86 ] # Haru spdX\n- [ bef32, 0x00B66B80, -108 ] # Haru spdY\n- [ bef32, 0x00B66B84, -80 ] # Haru plgX\n- [ bef32, 0x00B66B88, -101 ] # Haru plgY\n- [ bef32, 0x00B66B8C, -4 ] # Haru ailTopX\n- [ bef32, 0x00B66B90, -45 ] # Haru ailTopY\n- [ bef32, 0x00B66B94, -28 ] # Haru ailBottomX\n- [ bef32, 0x00B66B98, 34 ] # Haru ailBottomY\n- [ bef32, 0x00B66B9C, 0 ] # Futaba spdX\n- [ bef32, 0x00B66BA0, 0 ] # Futaba spdY\n- [ bef32, 0x00B66BA4, 0 ] # Futaba plgX\n- [ bef32, 0x00B66BA8, 0 ] # Futaba plgY\n- [ bef32, 0x00B66BAC, 0 ] # Futaba ailTopX\n- [ bef32, 0x00B66BB0, 0 ] # Futaba ailTopY\n- [ bef32, 0x00B66BB4, 0 ] # Futaba ailBottomX\n- [ bef32, 0x00B66BB8, 0 ] # Futaba ailBottomY\n- [ bef32, 0x00B66BBC, -83 ] # Akechi spdX\n- [ bef32, 0x00B66BC0, -104 ] # Akechi spdY\n- [ bef32, 0x00B66BC4, -88 ] # Akechi plgX\n- [ bef32, 0x00B66BC8, -99 ] # Akechi plgY\n- [ bef32, 0x00B66BCC, 12 ] # Akechi ailTopX\n- [ bef32, 0x00B66BD0, -31 ] # Akechi ailTopY\n- [ bef32, 0x00B66BD4, -28 ] # Akechi ailBottomX\n- [ bef32, 0x00B66BD8, 36 ] # Akechi ailBottomY"));
            //cbList.Items.Add(new ListItem("p5_pp_Unknown_NamesAreGuesses by Lipsum", "p5_pp_Unknown_NamesAreGuesses: &p5_pp_Unknown_NamesAreGuesses\n- [ bef32, 0x00B66BDC, 24 ] # NONE X\n- [ bef32, 0x00B66BE0, -44 ] # NONE Y\n- [ bef32, 0x00B66BE4, 0.8799999952 ] # NONE Rot\n- [ bef32, 0x00B66BE8, 69 ] # Joker X\n- [ bef32, 0x00B66BEC, -29 ] # Joker Y\n- [ bef32, 0x00B66BF0, 0.400000006 ] # Joker Rot\n- [ bef32, 0x00B66BF4, 32 ] # Ryuji X\n- [ bef32, 0x00B66BF8, -34 ] # Ryuji Y\n- [ bef32, 0x00B66BFC, 0.6999999881 ] # Ryuji Rot\n- [ bef32, 0x00B66C00, 51 ] # Morgana X\n- [ bef32, 0x00B66C04, 30 ] # Morgana Y\n- [ bef32, 0x00B66C08, 0.8000000119 ] # Morgana Rot\n- [ bef32, 0x00B66C0C, 20 ] # Ann X\n- [ bef32, 0x00B66C10, 59 ] # Ann Y\n- [ bef32, 0x00B66C14, 0.6499999762 ] # Ann Rot\n- [ bef32, 0x00B66C18, -15 ] # Yusuke X\n- [ bef32, 0x00B66C1C, -13 ] # Yusuke Y\n- [ bef32, 0x00B66C20, 0.6499999762 ] # Yusuke Rot\n- [ bef32, 0x00B66C24, -61 ] # Makoto X\n- [ bef32, 0x00B66C28, 48 ] # Makoto Y\n- [ bef32, 0x00B66C2C, 0.6000000238 ] # Makoto Rot\n- [ bef32, 0x00B66C30, -43 ] # Haru X\n- [ bef32, 0x00B66C34, -18 ] # Haru Y\n- [ bef32, 0x00B66C38, 0.400000006 ] # Haru Rot\n- [ bef32, 0x00B66C3C, -24 ] # Futaba X\n- [ bef32, 0x00B66C40, 37 ] # Futaba Y\n- [ bef32, 0x00B66C44, 0.4399999976 ] # Futaba Rot\n- [ bef32, 0x00B66C48, -3 ] # Akechi X\n- [ bef32, 0x00B66C4C, -35 ] # Akechi Y\n- [ bef32, 0x00B66C50, 0.400000006 ] # Akechi Rot"));
            //Lipsum (Other)
            //cbList.Items.Add(new ListItem("p5_TextBox by Lipsum (for manually setting textbox appearance)", "p5_TextBox: &p5_TextBox\n# bottom layer upper\n- [ bef32, 0x00DAA4D0, 39  ] # v00x\n- [ bef32, 0x00DAA4D4, 33  ] # v00y\n- [ bef32, 0x00DAA4D8, 661 ] # v01x\n- [ bef32, 0x00DAA4DC, 12  ] # v01y\n- [ bef32, 0x00DAA4E0, 737 ] # v02x\n- [ bef32, 0x00DAA4E4, 4   ] # v02y\n- [ bef32, 0x00DAA4E8, 735 ] # v03x\n- [ bef32, 0x00DAA4EC, 33  ] # v03y\n# bottom layer lower\n- [ bef32, 0x00DAA4F0, 762 ] # v04x\n- [ bef32, 0x00DAA4F4, 228 ] # v04y\n- [ bef32, 0x00DAA4F8, 720 ] # v05x\n- [ bef32, 0x00DAA4FC, 233 ] # v05y\n- [ bef32, 0x00DAA500, 76  ] # v06x\n- [ bef32, 0x00DAA504, 152 ] # v06y\n- [ bef32, 0x00DAA508, 32  ] # v07x\n- [ bef32, 0x00DAA50C, 61  ] # v07y\n# middle layer upper\n- [ bef32, 0x00DAA534, 42  ] # v00x\n- [ bef32, 0x00DAA538, 38  ] # v00y\n- [ bef32, 0x00DAA53C, 727 ] # v01x\n- [ bef32, 0x00DAA540, 15  ] # v01y\n# middle layer lower\n- [ bef32, 0x00DAA544, 748 ] # v02x\n- [ bef32, 0x00DAA548, 227 ] # v02y\n- [ bef32, 0x00DAA54C, 75  ] # v03x\n- [ bef32, 0x00DAA550, 146 ] # v03y\n# top layer upper\n- [ bef32, 0x00DAA560, 46  ] # v00x\n- [ bef32, 0x00DAA564, 45  ] # v00y\n- [ bef32, 0x00DAA568, 716 ] # v01x\n- [ bef32, 0x00DAA56C, 24  ] # v01y\n# top layer lower\n- [ bef32, 0x00DAA570, 742 ] # v02x\n- [ bef32, 0x00DAA574, 223 ] # v02y\n- [ bef32, 0x00DAA578, 71  ] # v03x\n- [ bef32, 0x00DAA57C, 135 ] # v03y"));
            //cbList.Items.Add(new ListItem("p5_PortraitColorTestAilmentDark by Lipsum (for manually setting dark ailment color)", "p5_PortraitColorTestAilmentDark: &p5_PortraitColorTestAilmentDark\n# 0x541212cc burn\n# 0x190101cc wrath\n# 0x110285cc envy\n# 0x423b30cc mouse\n# 0x1f5076cc freeze\n# 0x542f04cc shock\n# 0x514502cc dizzy\n# 0x37655ecc confuse\n# 0x70118fcc fear\n# 0x596264cc hunger\n# 0x490540cc sleep\n# 0xd10303cc rage\n# 0x170622cc despair\n# 0x67316acc brainwash\n# 0x6b0d39cc lust\n# 0x1c2627cc forget\n# 0x000000cc susceptible\n\n- [ be32, 0x0028dea0, 0x3c605412 ] # burn\n- [ be32, 0x0028dea4, 0x606312cc ] #\n- [ be32, 0x0028deb8, 0x3c601901 ] # wrath\n- [ be32, 0x0028debc, 0x606301cc ] #\n- [ be32, 0x0028ded0, 0x3c601102 ] # envy\n- [ be32, 0x0028ded4, 0x606385cc ] #\n- [ be32, 0x0028dee8, 0x3c60423b ] # mouse\n- [ be32, 0x0028deec, 0x606330cc ] #\n- [ be32, 0x0028df00, 0x3c601f50 ] # freeze\n- [ be32, 0x0028df04, 0x606376cc ] #\n- [ be32, 0x0028df18, 0x3c60542f ] # shock\n- [ be32, 0x0028df1c, 0x606304cc ] #\n- [ be32, 0x0028df30, 0x3c605145 ] # dizzy\n- [ be32, 0x0028df34, 0x606302cc ] #\n- [ be32, 0x0028df48, 0x3c603765 ] # confuse\n- [ be32, 0x0028df4c, 0x60635ecc ] #\n- [ be32, 0x0028df60, 0x3c607011 ] # fear\n- [ be32, 0x0028df64, 0x60638fcc ] #\n- [ be32, 0x0028df78, 0x3c605962 ] # hunger\n- [ be32, 0x0028df7c, 0x606364cc ] #\n- [ be32, 0x0028df90, 0x3c604905 ] # sleep\n- [ be32, 0x0028df94, 0x606340cc ] #\n- [ be32, 0x0028dfac, 0x3c60d103 ] # rage\n- [ be32, 0x0028dfb0, 0x606303cc ] #\n- [ be32, 0x0028dfc4, 0x3c601706 ] # despair\n- [ be32, 0x0028dfc8, 0x606322cc ] #\n- [ be32, 0x0028dfdc, 0x3c606731 ] # brainwash\n- [ be32, 0x0028dfe0, 0x60636acc ] #\n- [ be32, 0x0028dff4, 0x3c606b0d ] # lust\n- [ be32, 0x0028dff8, 0x606339cc ] #\n- [ be32, 0x0028e00c, 0x3c601c26 ] # forget\n- [ be32, 0x0028e010, 0x606327cc ] #\n- [ be32, 0x0028e024, 0x386000cc ] # susceptible"));
            //cbList.Items.Add(new ListItem("p5_PortraitColorTestAilmentBright by Lipsum (for manually setting bright ailment color)", "p5_PortraitColorTestAilmentBright: &p5_PortraitColorTestAilmentBright\n# 0xfded84ff burn\n# 0xfd4545ff wrath\n# 0x9da1fbff envy\n# 0xdcdcdcff mouse\n# 0xcef8f9ff freeze\n# 0xfedc3eff shock\n# 0xfcfac4ff dizzy\n# 0xc8f989ff confuse\n# 0xf9cef0ff fear\n#            hunger (same as burn)\n# 0xde9dffff sleep\n# 0xfcfae6ff rage\n# 0xba93c9ff despair\n# 0xfe32f2ff brainwash\n# 0xf84bb1ff lust\n# 0x80e9f5ff forget\n# 0x1b1b1bff susceptible\n\n- [ be32, 0x0028af10, 0x3c60fded ] # burn 0x____RRGG\n- [ be32, 0x0028af14, 0x606384ff ] #      0x____BBff\n- [ be32, 0x0028af2c, 0x3cc0fd45 ] # wrath\n- [ be32, 0x0028af30, 0x60c645ff ] #\n- [ be32, 0x0028af44, 0x3cc09da1 ] # envy\n- [ be32, 0x0028af48, 0x60c6fbff ] #\n- [ be32, 0x0028af5c, 0x3cc0dcdc ] # mouse\n- [ be32, 0x0028af60, 0x60c6dcff ] #\n- [ be32, 0x0028af74, 0x3cc0cef8 ] # freeze\n- [ be32, 0x0028af78, 0x60c6f9ff ] #\n- [ be32, 0x0028af8c, 0x3cc0fedc ] # shock\n- [ be32, 0x0028af90, 0x60c63eff ] #\n- [ be32, 0x0028afa4, 0x3cc0fcfa ] # dizzy\n- [ be32, 0x0028afa8, 0x60c6c4ff ] #\n- [ be32, 0x0028afbc, 0x3cc0c8f9 ] # confuse\n- [ be32, 0x0028afc0, 0x60c689ff ] #\n- [ be32, 0x0028afd4, 0x3cc0f9ce ] # fear\n- [ be32, 0x0028afd8, 0x60c6f0ff ] #\n                                   # hunger (same as burn)\n                                   #\n- [ be32, 0x0028affc, 0x3c60de9d ] # sleep\n- [ be32, 0x0028b000, 0x6063ffff ] #\n- [ be32, 0x0028b014, 0x3c60fcfa ] # rage\n- [ be32, 0x0028b018, 0x6063e6ff ] #\n- [ be32, 0x0028b02c, 0x3c60ba93 ] # despair\n- [ be32, 0x0028b030, 0x6063c9ff ] #\n- [ be32, 0x0028b044, 0x3c60fe32 ] # brainwash\n- [ be32, 0x0028b048, 0x6063f2ff ] #\n- [ be32, 0x0028b05c, 0x3c60f84b ] # lust\n- [ be32, 0x0028b060, 0x6063b1ff ] #\n- [ be32, 0x0028b074, 0x3c6080e9 ] # forget\n- [ be32, 0x0028b078, 0x6063f5ff ] #\n- [ be32, 0x0028b08c, 0x3c601b1b ] # susceptible\n- [ be32, 0x0028b090, 0x60631bff ] #"));
            //cbList.Items.Add(new ListItem("p5_PortraitColorTest by Lipsum (for manually setting portrait color)", "p5_PortraitColorTest: &p5_PortraitColorTest\n#- [ be32, 0x0028fbbc, 0x3bc00000 ] # li r30,0x0    # black - 0x00000000\n#- [ be32, 0x0028fdb0, 0x3ba0ff00 ] # li r29,-0x100 # white - 0xffffff00\n\n#- [ be32, 0x0028fe64, 0x93a30000 ] # stw r29,0x0(r3)\n#- [ be32, 0x0028ff88, 0x93c30000 ] # stw r30,0x0(r3)\n#- [ be32, 0x00290008, 0x93a30000 ] # stw r29,0x0(r3)\n#- [ be32, 0x002901ec, 0x63a40000 ] # ori r4,r29,0x0\n#- [ be32, 0x0029032c, 0x93a30000 ] # stw r29,0x0(r3)\n#- [ be32, 0x002903f4, 0x93c10070 ] # stw r30,0x70(r1)\n\n#- [ be32, 0x002901f8, 0x3c8066ff ] # lis r4,0x66ff # heal color?\n#- [ be32, 0x002901fc, 0x6084dc00 ] # ori r4,r4,0xdc00\n\n#- [ be32, 0x00290440, 0x3c805a00 ] # lis r4,0x5a00 # hit color?\n#- [ be32, 0x00290444, 0x608400cc ] # ori r4,r4,0xcc\n\n# ff0000 red - ???\n- [ be32, 0x28fe64, 0x48b44bc2 ]\n- [ be32, 0xb44bc0, 0x3fa0ff00 ] # lis r29, 0xrrgg\n- [ be32, 0xb44bc4, 0x63bd0000 ] # ori r29, r29, 0xbb00\n- [ be32, 0xb44bc8, 0x93a30000 ] # stw r29, 0(r3)\n- [ be32, 0xb44bcc, 0x3ba0ff00 ] # li  r29, -0x100\n- [ be32, 0xb44bd0, 0x4828fe6a ]\n# ff7f00 orange - dungeon inner\n- [ be32, 0x28ff88, 0x48b44bd6 ]\n- [ be32, 0xb44bd4, 0x3fc0ff7f ] # lis r30, 0xrrgg\n- [ be32, 0xb44bd8, 0x63de0000 ] # ori r30, r30, 0xbb00\n- [ be32, 0xb44bdc, 0x93c30000 ] # stw r30, 0(r3)\n- [ be32, 0xb44be0, 0x3bc00000 ] # li  r30, 0x0\n- [ be32, 0xb44be4, 0x4828ff8e ]\n# ffff00 yellow - ???\n- [ be32, 0x290008, 0x48b44bea ]\n- [ be32, 0xb44be8, 0x3fa0ffff ] # lis r29, 0xrrgg\n- [ be32, 0xb44bec, 0x63bd0000 ] # ori r29, r29, 0xbb00\n- [ be32, 0xb44bf0, 0x93a30000 ] # stw r29, 0(r3)\n- [ be32, 0xb44bf4, 0x3ba0ff00 ] # li  r29, -0x100\n- [ be32, 0xb44bf8, 0x4829000e ]\n# 00ff00 green - dungeon outer\n- [ be32, 0x2901ec, 0x48b44bfe ]\n- [ be32, 0xb44bfc, 0x3fa000ff ] # lis r29, 0xrrgg\n- [ be32, 0xb44c00, 0x63bd0000 ] # ori r29, r29, 0xbb00\n- [ be32, 0xb44c04, 0x63a40000 ] # ori r4, r29, 0x0\n- [ be32, 0xb44c08, 0x3ba0ff00 ] # li  r29, -0x100\n- [ be32, 0xb44c0c, 0x482901f2 ]\n# 0000ff blue - ???\n- [ be32, 0x29032c, 0x48b44c12 ]\n- [ be32, 0xb44c10, 0x3fa00000 ] # lis r29, 0xrrgg\n- [ be32, 0xb44c14, 0x63bdff00 ] # ori r29, r29, 0xbb00\n- [ be32, 0xb44c18, 0x93a30000 ] # stw r29, 0(r3)\n- [ be32, 0xb44c1c, 0x3ba0ff00 ] # li  r29, -0x100\n- [ be32, 0xb44c20, 0x48290332 ]\n# 4b0082 purple - active\n- [ be32, 0x2903f4, 0x48b44c26 ]\n- [ be32, 0xb44c24, 0x3fc04b00 ] # lis r30, 0xrrgg\n- [ be32, 0xb44c28, 0x63de8200 ] # ori r30, r30, 0xbb00\n- [ be32, 0xb44c2c, 0x93c10070 ] # stw r30, 0x70(r1)\n- [ be32, 0xb44c30, 0x3bc00000 ] # li  r30, 0x0\n- [ be32, 0xb44c34, 0x482903fa ]"));
            cbList.Items.Add(new ListItem("p5_MaxBullet by Lipsum (Custom Maximum Bullet Count) <br><span class=\"desc\">" +
                "To change the maximum bullet counts for each character, edit this patch and input your desired values. " +
                "By default, this patch retains the game defaults until modified.</span>",
                "p5_MaxBullet: &p5_MaxBullet\n" +
                "- [ be16, 0x00D5C188, 0  ] # empty - base start\n- [ be16, 0x00D5C18A, 16 ] # joker (16)\n- [ be16, 0x00D5C18C, 8  ] # ryuji (8)\n- [ be16, 0x00D5C18E, 15 ] # morgana (15)\n- [ be16, 0x00D5C190, 36 ] # ann (36)\n- [ be16, 0x00D5C192, 24 ] # yusuke (24)\n- [ be16, 0x00D5C194, 12 ] # makoto (12)\n- [ be16, 0x00D5C196, 6  ] # haru (6)\n- [ be16, 0x00D5C198, 0  ] # futaba (0)\n- [ be16, 0x00D5C19A, 12 ] # goro (12)\n- [ be16, 0x00D5C19C, 0  ] # empty - tower rank 5 start\n- [ be16, 0x00D5C19E, 32 ] # joker (32)\n- [ be16, 0x00D5C1A0, 16 ] # ryuji (16)\n- [ be16, 0x00D5C1A2, 25 ] # morgana (25)\n- [ be16, 0x00D5C1A4, 60 ] # ann (60)\n- [ be16, 0x00D5C1A6, 48 ] # yusuke (48)\n- [ be16, 0x00D5C1A8, 24 ] # makoto (24)\n- [ be16, 0x00D5C1AA, 12 ] # haru (12)\n- [ be16, 0x00D5C1AC, 0  ] # futaba (0)\n- [ be16, 0x00D5C1AE, 24 ] # goro (24)"));
            cbList.Items.Add(new ListItem("p5_NaviLines by Lipsum (Disable Navigator Battle Messages)<br><span class=\"desc\">" +
                "Disables Navigator battle lines (voice and message popups).</span>",
                "p5_NaviLines: &p5_NaviLines\n" +
                "- [ be32, 0x0074a3b4, 0x38a00000 ] # li r5, 0x0 # morgana\n- [ be32, 0x0074a424, 0x38a00000 ] # li r5, 0x0 # futaba"));
            //cbList.Items.Add(new ListItem("p5_HeeDat by Lipsum (Skip DLC Check)<br><span class=\"desc\">Skips requirement for DLC .edat/.rap files</span>", "p5_HeeDat: &p5_HeeDat\n- [ be32, 0x0019b830, 0x60000000 ]\n- [ be32, 0x0019b83c, 0x60000000 ]"));
            cbList.Items.Add(new ListItem("p5_d0d0d0 by Lipsum (Replace Color d0d0d0) <br><span class=\"desc\">" +
                "Replaces the red color in the pause menu. Yellow by default.</span>",
                "p5_d0d0d0: &p5_d0d0d0\n" +
                "- [ be32, 0x0045a6d8, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x0045a6dc, 0x60842200 ] # ori param_2,param_2,0xd000\n\n- [ be32, 0x0049c938, 0x3ca0ffff ] # lis param_3,-0x2f30\n- [ be32, 0x0049c93c, 0x60a52200 ] # ori param_3,param_3,0xd000\n\n- [ be32, 0x0049c978, 0x3ca0ffff ] # lis param_3,-0x2f30\n- [ be32, 0x0049c97c, 0x60a52200 ] # ori param_3,param_3,0xd000\n\n- [ be32, 0x0049ca6c, 0x3f20ffff ] # lis r25,-0x2f30\n- [ be32, 0x0049ca70, 0x63392200 ] # ori r25,r25,0xd000\n\n- [ be32, 0x0049caac, 0x3f20ffff ] # lis r25,-0x2f30\n- [ be32, 0x0049cab0, 0x63392200 ] # ori r25,r25,0xd000\n\n- [ be32, 0x004a02a0, 0x3d20ffff ] # lis param_7,-0x2f30\n- [ be32, 0x004a02c0, 0x61272200 ] # ori param_5,param_7,0xd000\n\n- [ be32, 0x004a2fe0, 0x3f80ffff ] # lis r28,-0x2f30\n- [ be32, 0x004a2fec, 0x639c2200 ] # ori r28,r28,0xd000\n\n- [ be32, 0x004a2ff4, 0x3f80ffff ] # lis r28,-0x2f30\n- [ be32, 0x004a3000, 0x639c2200 ] # ori r28,r28,0xd000\n\n- [ be32, 0x004a4374, 0x3cc0ffff ] # lis param_4,-0x2f30\n- [ be32, 0x004a437c, 0x60c62200 ] # ori param_4,param_4,0xd000\n\n- [ be32, 0x004a4490, 0x3ce0ffff ] # lis param_5,-0x2f30\n- [ be32, 0x004a4498, 0x60e72200 ] # ori param_5,param_5,0xd000\n\n- [ be32, 0x004a4bd0, 0x3c60ffff ] # lis param_1,-0x2f30\n- [ be32, 0x004a4bdc, 0x607a2200 ] # ori r26,param_1,0xd000\n\n- [ be32, 0x004a6304, 0x3c60ffff ] # lis param_1,-0x2f30\n- [ be32, 0x004a6308, 0x60632200 ] # ori param_1,param_1,0xd000\n\n- [ be32, 0x004ac530, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x004ac538, 0x60842200 ] # ori param_2,param_2,0xd000\n\n- [ be32, 0x004b3ad4, 0x3fc0ffff ] # lis r30,-0x2f30\n- [ be32, 0x004b3ad8, 0x63de2200 ] # ori r30,r30,0xd000\n\n- [ be32, 0x004c0f80, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x004c0f88, 0x60842200 ] # ori param_2,param_2,0xd000\n\n- [ be32, 0x004c1150, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x004c115c, 0x609d2200 ] # ori r29,param_2,0xd000\n\n- [ be32, 0x004c1154, 0x3ca0ffff ] # lis param_3,-0x2f30\n- [ be32, 0x004c1160, 0x60a32200 ] # ori param_1,param_3,0xd000\n\n- [ be32, 0x004c3c18, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x004c3c1c, 0x60842200 ] # ori param_2,param_2,0xd000\n\n- [ be32, 0x004c3c30, 0x3c60ffff ] # lis param_1,-0x2f30\n- [ be32, 0x004c3c38, 0x60632200 ] # ori param_1,param_1,0xd000\n\n- [ be32, 0x004c5b34, 0x3c60ffff ] # lis param_1,-0x2f30\n- [ be32, 0x004c5b38, 0x606522ff ] # ori param_3,param_1,0xd0ff\n\n- [ be32, 0x004c5f0c, 0x3c80ffff ] # lis param_2,-0x2f30\n- [ be32, 0x004c5f18, 0x60842200 ] # ori param_2,param_2,0xd000\n\n- [ be32, 0x0052b1b0, 0x3ca0ffff ] # lis param_3,-0x2f30\n- [ be32, 0x0052b1c4, 0x60a52200 ] # ori param_3,param_3,0xd000"));
            cbList.Items.Add(new ListItem("p5_disableHPSPUI by DeathChaos (Prevent Party Panel From Loading) <br><span class=\"desc\">" +
                "Prevents in combat HP/SP Bar UI from loading for testing purposes</span>",
                "p5_disableHPSPUI: &p5_disableHPSPUI\n" +
                "# Prevent party_panel from being loaded\n- [ be32, 0x28fc14, 0x60000000 ]\n- [ be32, 0x28fc1c, 0x60000000 ]\n- [ be32, 0x28fc20, 0x60000000 ]\n- [ be32, 0x28fc34, 0x60000000 ]\n- [ be32, 0x28fc40, 0x60000000 ]\n- [ be32, 0x28fc54, 0x60000000 ]"));
            //cbList.Items.Add(new ListItem("p5_UnlockPersonaUsingEnemies by DeathChaos (Unlock Persona Using Enemies) <br><span class=\"desc\">" +
            //    "Un-hardcode which encounters in P5 use Personas, and which Persona they use.", "p5_UnlockPersonaUsingEnemies: &p5_UnlockPersonaUsingEnemies\n# Unlock Persona Using Enemies\n# Make Akechi Persona Comparison explicit\n- [ be32, 0x785704, 0x281e00d9 ] # cmplwi r30 ,0xd9\n- [ be32, 0x785708, 0x40820010 ] # bne LAB_00785718\n# Enemy 232\n- [ be32, 0x785718, 0x281e00e8 ] # cmplwi r30, 0xe8\n- [ be32, 0x78571C, 0x4182008c ] # beq LAB_007857a8\n# IF enemy ID is less than 194, enable Persona\n- [ be32, 0x785720, 0x281e00c2 ] # cmplwi r30 ,0xc2\n- [ be32, 0x785724, 0x4081008c ] # ble SetSinglePersona\n# Fix Black Mask Persona\n- [ be32, 0x7857a8, 0x386000db ] # li param_1,0xB5\n# Copy Enemy ID to Persona ID\n- [ be32, 0x7857b0, 0x7f63f378 ] # or r3, r27, r30"));
            cbList.Items.Add(new ListItem("p5_DisableBGM by DniweTamp (Disables background music) <br><span class=\"desc\">" +
                "Disables background music.",
                "p5_DisableBGM: &p5_DisableBGM\n" +
                "# rename bgm.awb\n- [ be32, 0x00B4972E, 0x63756D2E ]\n# rename bgm_xx.awb\n- [ be32, 0x00B497AE, 0x63756D2E ]"));
            cbList.Items.Add(new ListItem("p5_FieldTests by DniweTamp (Load same ENV on all Fields) <br><span class=\"desc\">" +
                "Makes all fields load the same ENV file, env/testing_envs_file.ENV",
                "p5_FieldTests: &p5_FieldTests\n" +
                "- [ be64, 0x00B477A8, 0x74657374696E675F ]\n- [ be64, 0x00B477B0, 0x656E76735F66696C ]\n- [ byte, 0x00B477B8, 0x65 ]"));
            //Enable first 4 values
            for (int i = 2; i < 6; i++)
                cbList.Items[i].Selected = true;
            //Show checkbox list
            placeHolder.Controls.Add(cbList);
        }


        protected void Download_Click(object sender, EventArgs e)
        {
            for (int i = 0; i < 2; i++)
                if (cbList.Items[i].Selected == true)
                {
                    cbList.Items[2].Selected = false;
                    cbList.Items[3].Selected = false;
                    cbList.Items[4].Selected = false;
                    cbList.Items[6].Selected = false;
                }

            StringBuilder sb = new StringBuilder();
            if (radioNew.Checked)
                sb.Append("Version: 1.2\n\n");
            sb.Append("# Patch.yml generated by shrinefox.com/PatchCreator\n");

            //Add patches
            if (radioOld.Checked)
            {
                foreach (ListItem li in cbList.Items)
                    if (li.Selected)
                        sb.Append($"# {Regex.Match(li.Text, @"^.*(?=(\<span))")}\n{li.Value}\n\n");
                sb.Append(txtBox_PPU.Text + ":"); //PPU Hash
                foreach (ListItem li in cbList.Items)
                    if (li.Selected)
                        sb.Append("\n- [ load, " + li.Value.Split(':')[0] + " ]");
            }
            else if (radioNew.Checked)
            {
                foreach (ListItem li in cbList.Items)
                    if (li.Selected)
                        sb.Append($"\n\n{txtBox_PPU.Text + ":"}" +
                            $"\n  {Regex.Match(li.Text, @"(?<=\()(.*?)(?=\))")}:" +
                            $"\n    Games:" +
                            $"\n      \"Persona 5\":" +
                            $"\n        BLES02247: [ All ]" +
                            $"\n        NPEB02436: [ All ]" +
                            $"\n        BLUS31604: [ All ]" +
                            $"\n        NPUB31848: [ All ]" +
                            $"\n    Author:{Regex.Match(li.Text, @"(?<=by)(.*?)(?=\()")}" +
                            $"\n    Notes: {Regex.Match(li.Text, @"<span[^>]*?>(.*?)</span>").ToString().Replace("<span class=\"desc\">", "").Replace("</span>", "")}" +
                            $"\n    Patch Version: 1.0" +
                            $"\n    Patch:" +
                            $"\n      {String.Join("\n      ", li.Value.Split(Environment.NewLine.ToCharArray()).Skip(1).ToArray())}");
            }

            //Download file
            string text = sb.ToString();
            string text2 = Regex.Replace(text.Replace("<br>", "\n"), @"\s*(\n)", "$1");
            Response.Clear();
            Response.ClearHeaders();
            Response.AppendHeader("Content-Length", text2.Length.ToString());
            Response.ContentType = "text/plain";
            Response.AppendHeader("Content-Disposition", "attachment;filename=\"patch.yml\"");
            Response.Write(text2);
            Response.End();
        }

        protected void Select_Click(object sender, EventArgs e)
        {
            foreach (ListItem li in cbList.Items)
                li.Selected = true;
        }

        protected void Deselect_Click(object sender, EventArgs e)
        {
            foreach (ListItem li in cbList.Items)
                li.Selected = false;
        }
    }
}